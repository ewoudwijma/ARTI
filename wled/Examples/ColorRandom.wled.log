 PROGRAM PROGRAM -> [ID ColorRandom] 0
 ID ColorRandom -> [LCURL {] 0
 block 0
  LCURL { -> [FUNCTION FUNCTION] 1
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
     FUNCTION FUNCTION -> [ID renderLed] 4
     ID renderLed -> [LPAREN (] 4
      LPAREN ( -> [ID i] 5
      formals 5
       formal 6
       ID i -> [RPAREN )] 6
       success formal
      remove key/value FUNCTION FUNCTION (5)
      remove key/value LPAREN ( (5)
      remove multiple key (5)
      remove multiple empty (5)
      success formals
      RPAREN ) -> [LCURL {] 5
     block 4
      LCURL { -> [ID color] 5
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID color -> [ASSIGN =] 8
         success varleft
         ASSIGN = -> [ID random] 8
         expr 8
          term 9
           factor 10
            call 11
             ID random -> [LPAREN (] 12
             LPAREN ( -> [RPAREN )] 12
             actuals 12
              expr 13
               term 14
                factor 15
                 call 16
                 fail call
                 varref 16
                 fail varref
                fail factor
               fail term
              fail expr
             remove key/value LPAREN ( (12)
             remove empty values for key actuals (12)
             success actuals
             RPAREN ) -> [ID setPixelColor] 12
            success call
           success factor
          remove multiple key (9)
          remove multiple empty (9)
          success term
         remove key/value ASSIGN = (8)
         remove multiple key (8)
         remove multiple empty (8)
         success expr
        success assign
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setPixelColor -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID i] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
              ID i -> [COMMA ,] 13
             fail call
             varref 12
             ID i -> [COMMA ,] 12
             success varref
            success factor
           remove multiple key (10)
           remove multiple empty (10)
           success term
          remove multiple key (9)
          remove multiple empty (9)
          success expr
           COMMA , -> [ID color] 10
           expr 10
            term 11
             factor 12
              call 13
               ID color -> [RPAREN )] 14
              fail call
              varref 13
              ID color -> [RPAREN )] 13
              success varref
             success factor
            remove multiple key (11)
            remove multiple empty (11)
            success term
           remove multiple key (10)
           remove multiple empty (10)
           success expr
         remove key/value LPAREN ( (8)
         remove multiple key (8)
         success actuals
         RPAREN ) -> [RCURL }] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         fail varleft
        fail assign
        function 7
        fail function
        call 7
        fail call
        for 7
        fail for
        if 7
        fail if
        block 7
        fail block
       fail statement
      RCURL } -> [RCURL }] 5
     remove key/value RPAREN ) (4)
     remove multiple key (4)
     success block
    success function
   success statement
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
    fail function
    call 3
    fail call
    for 3
    fail for
    if 3
    fail if
    block 3
    fail block
   fail statement
  RCURL } 1
 remove key/value PROGRAM PROGRAM (0)
 remove multiple key (0)
 success block
Symbol program Parsed until (11,1) 149 of 149
par mem 3802 of 14904 14904 1 0 19
prog size 149 factor 25
par mem 1687 of 14904 14904 1 0 19
Destruct Lexer

Analyzer
 Program ColorRandom 1 0
     Function ColorRandom.renderLed
      Formal renderLed.i of notype
         Assign renderLed.color of notype
         Assign color = (8)
             Ext Function found random (12)
         Ext Function found setPixelColor (8)
             VarRef found renderLed.i (12)
               VarRef found renderLed.color (14)
     0 Formal renderLed.i notype 2
     1 Assign renderLed.color notype 2
 0 Function ColorRandom.renderLed  1

interpret ColorRandom 1 1
 program name ID
 Program ColorRandom ColorRandom
     Save block of renderLed
                 Call random() = 41.000000
             renderLed.color := 41.000000 (pop 0)
                 VarRef renderLed.i = 0.000000 (push 1)
                   VarRef renderLed.color = 41.000000 (push 2)
setPixelColor(0.000000, 41.000000)
             Call setPixelColor(0.000000, 41.000000)
                 Call random() = 18467.000000
             renderLed.color := 18467.000000 (pop 0)
                 VarRef renderLed.i = 1.000000 (push 1)
                   VarRef renderLed.color = 18467.000000 (push 2)
setPixelColor(1.000000, 18467.000000)
             Call setPixelColor(1.000000, 18467.000000)
                 Call random() = 6334.000000
             renderLed.color := 6334.000000 (pop 0)
                 VarRef renderLed.i = 2.000000 (push 1)
                   VarRef renderLed.color = 6334.000000 (push 2)
setPixelColor(2.000000, 6334.000000)
             Call setPixelColor(2.000000, 6334.000000)
Destruct activation record renderLed
                 Call random() = 26500.000000
             renderLed.color := 26500.000000 (pop 0)
                 VarRef renderLed.i = 0.000000 (push 1)
                   VarRef renderLed.color = 26500.000000 (push 2)
setPixelColor(0.000000, 26500.000000)
             Call setPixelColor(0.000000, 26500.000000)
                 Call random() = 19169.000000
             renderLed.color := 19169.000000 (pop 0)
                 VarRef renderLed.i = 1.000000 (push 1)
                   VarRef renderLed.color = 19169.000000 (push 2)
setPixelColor(1.000000, 19169.000000)
             Call setPixelColor(1.000000, 19169.000000)
                 Call random() = 15724.000000
             renderLed.color := 15724.000000 (pop 0)
                 VarRef renderLed.i = 2.000000 (push 1)
                   VarRef renderLed.color = 15724.000000 (push 2)
setPixelColor(2.000000, 15724.000000)
             Call setPixelColor(2.000000, 15724.000000)
Destruct activation record renderLed
Destruct callstack
Destruct valueStack
def mem 9435 of 12192 12192 24 0 6
par mem 1751 of 14904 14904 1 0 19
