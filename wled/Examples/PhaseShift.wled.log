setup 0 bytes free
open wled.json 0 ✓
definitionTree 16384 => 0 ✓
open Examples/PhaseShift.wled 0 ✓
programFile size 366 bytes
parseTree 65536 => 0 ✓
 PROGRAM PROGRAM -> [ID PhaseShift] 0
 ID PhaseShift -> [LCURL {] 0
  LCURL { -> [ID pixelCounter] 1
     ID pixelCounter -> [ASSIGN =] 4
     found varref
       ASSIGN = -> [INTEGER_CONST 3] 6
     found assignoperator
         INTEGER_CONST 3 -> [ID countAdd] 8
        found factor
       found term
      found expr
    found assign
   found statement
     ID countAdd -> [ASSIGN =] 4
     found varref
       ASSIGN = -> [INTEGER_CONST 1] 6
     found assignoperator
         INTEGER_CONST 1 -> [FUNCTION FUNCTION] 8
        found factor
       found term
      found expr
    found assign
   found statement
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID pixelCounter] 5
         ID pixelCounter -> [ASSIGN+ +=] 8
         found varref
           ASSIGN+ += -> [ID countAdd] 10
         found assignoperator
              ID countAdd -> [IF IF] 13
             ID countAdd -> [IF IF] 12
             found varref
            found factor
           found term
          found expr
        found assign
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [GT >] 12
            ID pixelCounter -> [GT >] 11
            found varref
           found factor
          found term
            GT > -> [INTEGER_CONST 15] 11
             INTEGER_CONST 15 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID countAdd] 9
             ID countAdd -> [ASSIGN =] 12
             found varref
               ASSIGN = -> [INTEGER_CONST 0] 14
             found assignoperator
                 INTEGER_CONST 0 -> [MINUS -] 16
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 1] 16
                  INTEGER_CONST 1 -> [RCURL }] 17
                 found factor
                found term
              found expr
            found assign
           found statement
          RCURL } -> [IF IF] 9
         found block
        found if
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [LT <] 12
            ID pixelCounter -> [LT <] 11
            found varref
           found factor
          found term
            LT < -> [INTEGER_CONST 3] 11
             INTEGER_CONST 3 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID countAdd] 9
             ID countAdd -> [ASSIGN =] 12
             found varref
               ASSIGN = -> [INTEGER_CONST 1] 14
             found assignoperator
                 INTEGER_CONST 1 -> [RCURL }] 16
                found factor
               found term
              found expr
            found assign
           found statement
          RCURL } -> [RCURL }] 9
         found block
        found if
       found statement
      RCURL } -> [FUNCTION FUNCTION] 5
     found block
    found function
   found statement
     FUNCTION FUNCTION -> [ID renderLed] 4
     ID renderLed -> [LPAREN (] 4
      LPAREN ( -> [ID i] 5
       ID i -> [RPAREN )] 6
       found formal
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID setPixelColor] 5
         ID setPixelColor -> [LPAREN (] 8
         found varref
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID i] 8
              ID i -> [COMMA ,] 13
             ID i -> [COMMA ,] 12
             found varref
            found factor
           found term
          found expr
           COMMA , -> [ID i] 10
               ID i -> [MUL *] 14
              ID i -> [MUL *] 13
              found varref
             found factor
               MUL * -> [ID pixelCounter] 14
                ID pixelCounter -> [RPAREN )] 15
               ID pixelCounter -> [RPAREN )] 14
               found varref
              found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [RCURL }] 8
        found call
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } 1
 found block
Symbol program Parsed until (30,0) 366 of 366
definitionTree 11566 / 70% (26 0 6)
parseTree      10283 / 15% (1 0 22)
garbageCollect 7211 / 11%
Destruct Lexer
parse 0 ✓

Optimizer
        symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"3"}} from {"term":{"factor":{"INTEGER_CONST":"3"}},"*":["multiple"]}
        symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}},"*":["multiple"]}
             symbol to shrink factor in term : {"factor":{"varref":{"ID":"countAdd"}}} from {"term":{"factor":{"varref":{"ID":"countAdd"}}},"*":["multiple"]}
             symbol to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple",{"GT":">"},{"term":{"factor":{"INTEGER_CONST":"15"},"*":["multiple"]}}]}
               symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"15"}} from {"term":{"factor":{"INTEGER_CONST":"15"}}}
                  symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"INTEGER_CONST":"1"},"*":["multiple"]}}]}
                    symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}}}
             symbol to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple",{"LT":"<"},{"term":{"factor":{"INTEGER_CONST":"3"},"*":["multiple"]}}]}
               symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"3"}} from {"term":{"factor":{"INTEGER_CONST":"3"}}}
                  symbol to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}},"*":["multiple"]}
              symbol to shrink factor in term : {"factor":{"varref":{"ID":"i"}}} from {"term":{"factor":{"varref":{"ID":"i"}}},"*":["multiple"]}
optimize 0 ✓

Analyzer
 Program PhaseShift 1 0
     assign PhaseShift.pixelCounter of notype
     assign pixelCounter = (4)
     assign PhaseShift.countAdd of notype
     assign countAdd = (4)
     Function PhaseShift.renderFrame
         assign pixelCounter = (8)
         +=
            VarRef found PhaseShift.countAdd (11)
            VarRef found PhaseShift.pixelCounter (11)
              assign countAdd = (13)
            VarRef found PhaseShift.pixelCounter (11)
              assign countAdd = (13)
     Function PhaseShift.renderLed
      formal renderLed.i of notype
         Ext Function found setPixelColor (8)
            VarRef found renderLed.i (11)
               VarRef found renderLed.i (14)
                 VarRef found PhaseShift.pixelCounter (16)
     0 formal renderLed.i of 9 (2)
 0 assign PhaseShift.pixelCounter of 9 (1)
 1 assign PhaseShift.countAdd of 9 (1)
 2 function PhaseShift.renderFrame of 9 (1)
 3 function PhaseShift.renderLed of 9 (1)
analyze 0 ✓

interpret PhaseShift 1 4
 program PhaseShift
        INTEGER_CONST 3 (Push 1)
     PhaseShift.pixelCounter := 3.000000 (pop 0) 1-0
        INTEGER_CONST 1 (Push 1)
     PhaseShift.countAdd := 1.000000 (pop 0) 1-1
     Save block of renderFrame
     Save block of renderLed
Interpret main 0 ✓
         Call renderFrame (1)
                varref PhaseShift.countAdd = 1.000000 (push 1) 1-1
             PhaseShift.pixelCounter += 4.000000 (pop 0) 1-0
             If (stack 0)
             condition
                varref PhaseShift.pixelCounter = 4.000000 (push 1) 1-0
                 GT > (Push 2)
                  INTEGER_CONST 15 (Push 3)
              4.000000 > 15.000000 = 0.000000 (pop 0, push 1)
             (pop 0)
             If (stack 0)
             condition
                varref PhaseShift.pixelCounter = 4.000000 (push 1) 1-0
                 LT < (Push 2)
                  INTEGER_CONST 3 (Push 3)
              4.000000 < 3.000000 = 0.000000 (pop 0, push 1)
             (pop 0)
Destruct activation record renderFrame
                varref renderLed.i = 0.000000 (push 1) 2-0
                   varref renderLed.i = 0.000000 (push 2) 2-0
                    MUL * (Push 3)
                     varref PhaseShift.pixelCounter = 4.000000 (push 4) 1-0
                 0.000000 * 4.000000 = 0.000000 (pop 1, push 2)
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000) (Pop 0)
                varref renderLed.i = 1.000000 (push 1) 2-0
                   varref renderLed.i = 1.000000 (push 2) 2-0
                    MUL * (Push 3)
                     varref PhaseShift.pixelCounter = 4.000000 (push 4) 1-0
                 1.000000 * 4.000000 = 4.000000 (pop 1, push 2)
setPixelColor(1.000000, 4.000000)
             Call setPixelColor(1.000000, 4.000000) (Pop 0)
                varref renderLed.i = 2.000000 (push 1) 2-0
                   varref renderLed.i = 2.000000 (push 2) 2-0
                    MUL * (Push 3)
                     varref PhaseShift.pixelCounter = 4.000000 (push 4) 1-0
                 2.000000 * 4.000000 = 8.000000 (pop 1, push 2)
setPixelColor(2.000000, 8.000000)
             Call setPixelColor(2.000000, 8.000000) (Pop 0)
Destruct activation record renderLed
         Call renderFrame (1)
                varref PhaseShift.countAdd = 1.000000 (push 1) 1-1
             PhaseShift.pixelCounter += 5.000000 (pop 0) 1-0
             If (stack 0)
             condition
                varref PhaseShift.pixelCounter = 5.000000 (push 1) 1-0
                 GT > (Push 2)
                  INTEGER_CONST 15 (Push 3)
              5.000000 > 15.000000 = 0.000000 (pop 0, push 1)
             (pop 0)
             If (stack 0)
             condition
                varref PhaseShift.pixelCounter = 5.000000 (push 1) 1-0
                 LT < (Push 2)
                  INTEGER_CONST 3 (Push 3)
              5.000000 < 3.000000 = 0.000000 (pop 0, push 1)
             (pop 0)
Destruct activation record renderFrame
                varref renderLed.i = 0.000000 (push 1) 2-0
                   varref renderLed.i = 0.000000 (push 2) 2-0
                    MUL * (Push 3)
                     varref PhaseShift.pixelCounter = 5.000000 (push 4) 1-0
                 0.000000 * 5.000000 = 0.000000 (pop 1, push 2)
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000) (Pop 0)
                varref renderLed.i = 1.000000 (push 1) 2-0
                   varref renderLed.i = 1.000000 (push 2) 2-0
                    MUL * (Push 3)
                     varref PhaseShift.pixelCounter = 5.000000 (push 4) 1-0
                 1.000000 * 5.000000 = 5.000000 (pop 1, push 2)
setPixelColor(1.000000, 5.000000)
             Call setPixelColor(1.000000, 5.000000) (Pop 0)
                varref renderLed.i = 2.000000 (push 1) 2-0
                   varref renderLed.i = 2.000000 (push 2) 2-0
                    MUL * (Push 3)
                     varref PhaseShift.pixelCounter = 5.000000 (push 4) 1-0
                 2.000000 * 5.000000 = 10.000000 (pop 1, push 2)
setPixelColor(2.000000, 10.000000)
             Call setPixelColor(2.000000, 10.000000) (Pop 0)
Destruct activation record renderLed
closing Arti 0
Destruct callstack
Destruct valueStack
Destruct ScopedSymbolTable renderFrame (0)
Destruct Symbol i (0)
Destruct ScopedSymbolTable renderLed (0)
Destruct Symbol pixelCounter (0)
Destruct Symbol countAdd (0)
Destruct Symbol renderFrame (0)
Destruct Symbol renderLed (0)
Destruct ScopedSymbolTable PhaseShift (0)
definitionJson  11566 / 70% (26 0 6)
parseTree       8779 / 13% (1 0 21)
closed Arti 0 ✓
