Heap Setup < 0 (0ms) wled.json Examples/PhaseShift.wled
Heap open definition file > 0
Heap definitionJsonDoc 16384 > 0 (0ms)
programFile size 380 bytes
Heap parseTreeJsonDoc 32768 > 0 (0ms)
 PROGRAM PROGRAM -> [ID PhaseShift] 0
 ID PhaseShift -> [LCURL {] 0
  LCURL { -> [ID pixelCounter] 1
     ID pixelCounter -> [ASSIGN =] 4
     found varleft
     ASSIGN = -> [INTEGER_CONST 3] 4
        INTEGER_CONST 3 -> [ID countAdd] 7
       found factor
      found term
     found expr
    found assign
   found statement
     ID countAdd -> [ASSIGN =] 4
     found varleft
     ASSIGN = -> [INTEGER_CONST 1] 4
        INTEGER_CONST 1 -> [FUNCTION FUNCTION] 7
       found factor
      found term
     found expr
    found assign
   found statement
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID pixelCounter] 5
         ID pixelCounter -> [ASSIGN =] 8
         found varleft
         ASSIGN = -> [ID pixelCounter] 8
             ID pixelCounter -> [PLUS +] 12
            ID pixelCounter -> [PLUS +] 11
            found varref
           found factor
          found term
            PLUS + -> [ID countAdd] 11
              ID countAdd -> [IF IF] 13
             ID countAdd -> [IF IF] 12
             found varref
            found factor
           found term
         found expr
        found assign
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [GT >] 12
            ID pixelCounter -> [GT >] 11
            found varref
           found factor
          found term
            GT > -> [INTEGER_CONST 15] 11
             INTEGER_CONST 15 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID countAdd] 9
             ID countAdd -> [ASSIGN =] 12
             found varleft
             ASSIGN = -> [INTEGER_CONST 0] 12
                INTEGER_CONST 0 -> [MINUS -] 15
               found factor
              found term
                MINUS - -> [INTEGER_CONST 1] 15
                 INTEGER_CONST 1 -> [RCURL }] 16
                found factor
               found term
             found expr
            found assign
           found statement
          RCURL } -> [IF IF] 9
         found block
        found if
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [LT <] 12
            ID pixelCounter -> [LT <] 11
            found varref
           found factor
          found term
            LT < -> [INTEGER_CONST 3] 11
             INTEGER_CONST 3 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID countAdd] 9
             ID countAdd -> [ASSIGN =] 12
             found varleft
             ASSIGN = -> [INTEGER_CONST 1] 12
                INTEGER_CONST 1 -> [RCURL }] 15
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [RCURL }] 9
         found block
        found if
       found statement
      RCURL } -> [FUNCTION FUNCTION] 5
     found block
    found function
   found statement
     FUNCTION FUNCTION -> [ID renderLed] 4
     ID renderLed -> [LPAREN (] 4
      LPAREN ( -> [ID i] 5
       ID i -> [RPAREN )] 6
       found formal
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID setPixelColor] 5
         ID setPixelColor -> [LPAREN (] 8
         found varleft
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID i] 8
              ID i -> [COMMA ,] 13
             ID i -> [COMMA ,] 12
             found varref
            found factor
           found term
          found expr
           COMMA , -> [ID i] 10
               ID i -> [MUL *] 14
              ID i -> [MUL *] 13
              found varref
             found factor
               MUL * -> [ID pixelCounter] 14
                ID pixelCounter -> [RPAREN )] 15
               ID pixelCounter -> [RPAREN )] 14
               found varref
              found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [RCURL }] 8
        found call
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } 1
 found block
Symbol program Parsed until (30,0) 380 of 380
definitionJson usage 10355 of 16384 (63 %) (24 0 6)
parseTree usage      10535 of 32768 (32 %) (1 0 22)
garbageCollect       7335 of 32768 (22 %) (1 0 22)
Destruct Lexer
Heap parse > 0 (0ms)

Optimizer
Heap optimize > 0 (0ms)

Analyzer
 Program PhaseShift 1 0
     F_Assign PhaseShift.pixelCounter of notype
     F_Assign pixelCounter = (4)
     F_Assign PhaseShift.countAdd of notype
     F_Assign countAdd = (4)
     Function PhaseShift.renderFrame
         F_Assign pixelCounter = (8)
            VarRef found PhaseShift.pixelCounter (11)
              VarRef found PhaseShift.countAdd (13)
            VarRef found PhaseShift.pixelCounter (11)
              F_Assign countAdd = (13)
            VarRef found PhaseShift.pixelCounter (11)
              F_Assign countAdd = (13)
     Function PhaseShift.renderLed
      F_Formal renderLed.i of notype
         Ext Function found setPixelColor (8)
            VarRef found renderLed.i (11)
               VarRef found renderLed.i (14)
                 VarRef found PhaseShift.pixelCounter (16)
     0 F_Formal renderLed.i of 9 (2)
 0 F_Assign PhaseShift.pixelCounter of 9 (1)
 1 F_Assign PhaseShift.countAdd of 9 (1)
 2 F_Function PhaseShift.renderFrame of 9 (1)
 3 F_Function PhaseShift.renderLed of 9 (1)
Heap analyze > 0 (0ms)

interpret PhaseShift 1 4
 program name ID
 Program PhaseShift PhaseShift
        INTEGER_CONST 3 (Push 1)
     PhaseShift.pixelCounter := 3.000000 (pop 0) 1-0
        INTEGER_CONST 1 (Push 1)
     PhaseShift.countAdd := 1.000000 (pop 0) 1-1
     Save block of renderFrame
     Save block of renderLed
Heap Interpret main > 0 (0ms)
         Call renderFrame (1)
                F_VarRef PhaseShift.pixelCounter = 3.000000 (push 1) 1-0
                 PLUS + (Push 2)
                  F_VarRef PhaseShift.countAdd = 1.000000 (push 3) 1-1
              3.000000 + 1.000000 = 4.000000 (push 4)
             PhaseShift.pixelCounter := 4.000000 (pop 0) 1-0
             If (0)
             if condition
                F_VarRef PhaseShift.pixelCounter = 4.000000 (push 1) 1-0
                 GT > (Push 2)
                  INTEGER_CONST 15 (Push 3)
              4.000000 > 15.000000 = 0.000000 (push 4)
             (pop 0)
             If (0)
             if condition
                F_VarRef PhaseShift.pixelCounter = 4.000000 (push 1) 1-0
                 LT < (Push 2)
                  INTEGER_CONST 3 (Push 3)
              4.000000 < 3.000000 = 0.000000 (push 4)
             (pop 0)
Destruct activation record renderFrame
                F_VarRef renderLed.i = 0.000000 (push 1) 2-0
                   F_VarRef renderLed.i = 0.000000 (push 2) 2-0
                    MUL * (Push 3)
                     F_VarRef PhaseShift.pixelCounter = 4.000000 (push 4) 1-0
                 0.000000 * 4.000000 = 0.000000 (push 5)
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
                F_VarRef renderLed.i = 1.000000 (push 1) 2-0
                   F_VarRef renderLed.i = 1.000000 (push 2) 2-0
                    MUL * (Push 3)
                     F_VarRef PhaseShift.pixelCounter = 4.000000 (push 4) 1-0
                 1.000000 * 4.000000 = 4.000000 (push 5)
setPixelColor(1.000000, 4.000000)
             Call setPixelColor(1.000000, 4.000000)
                F_VarRef renderLed.i = 2.000000 (push 1) 2-0
                   F_VarRef renderLed.i = 2.000000 (push 2) 2-0
                    MUL * (Push 3)
                     F_VarRef PhaseShift.pixelCounter = 4.000000 (push 4) 1-0
                 2.000000 * 4.000000 = 8.000000 (push 5)
setPixelColor(2.000000, 8.000000)
             Call setPixelColor(2.000000, 8.000000)
Destruct activation record renderLed
         Call renderFrame (1)
                F_VarRef PhaseShift.pixelCounter = 4.000000 (push 1) 1-0
                 PLUS + (Push 2)
                  F_VarRef PhaseShift.countAdd = 1.000000 (push 3) 1-1
              4.000000 + 1.000000 = 5.000000 (push 4)
             PhaseShift.pixelCounter := 5.000000 (pop 0) 1-0
             If (0)
             if condition
                F_VarRef PhaseShift.pixelCounter = 5.000000 (push 1) 1-0
                 GT > (Push 2)
                  INTEGER_CONST 15 (Push 3)
              5.000000 > 15.000000 = 0.000000 (push 4)
             (pop 0)
             If (0)
             if condition
                F_VarRef PhaseShift.pixelCounter = 5.000000 (push 1) 1-0
                 LT < (Push 2)
                  INTEGER_CONST 3 (Push 3)
              5.000000 < 3.000000 = 0.000000 (push 4)
             (pop 0)
Destruct activation record renderFrame
                F_VarRef renderLed.i = 0.000000 (push 1) 2-0
                   F_VarRef renderLed.i = 0.000000 (push 2) 2-0
                    MUL * (Push 3)
                     F_VarRef PhaseShift.pixelCounter = 5.000000 (push 4) 1-0
                 0.000000 * 5.000000 = 0.000000 (push 5)
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
                F_VarRef renderLed.i = 1.000000 (push 1) 2-0
                   F_VarRef renderLed.i = 1.000000 (push 2) 2-0
                    MUL * (Push 3)
                     F_VarRef PhaseShift.pixelCounter = 5.000000 (push 4) 1-0
                 1.000000 * 5.000000 = 5.000000 (push 5)
setPixelColor(1.000000, 5.000000)
             Call setPixelColor(1.000000, 5.000000)
                F_VarRef renderLed.i = 2.000000 (push 1) 2-0
                   F_VarRef renderLed.i = 2.000000 (push 2) 2-0
                    MUL * (Push 3)
                     F_VarRef PhaseShift.pixelCounter = 5.000000 (push 4) 1-0
                 2.000000 * 5.000000 = 10.000000 (push 5)
setPixelColor(2.000000, 10.000000)
             Call setPixelColor(2.000000, 10.000000)
Destruct activation record renderLed
Heap close Arti < 0
Destruct callstack
Destruct valueStack
Heap Destruct ScopedSymbolTable renderFrame (0)
Heap Destruct Symbol i (0)
Heap Destruct ScopedSymbolTable renderLed (0)
Heap Destruct Symbol pixelCounter (0)
Heap Destruct Symbol countAdd (0)
Heap Destruct Symbol renderFrame (0)
Heap Destruct Symbol renderLed (0)
Heap Destruct ScopedSymbolTable PhaseShift (0)
definitionJson usage  10355 of 16384 (63 %) (24 0 6)
parseTree usage       9063 of 32768 (28 %) (1 0 21)
