Heap Setup < 0 (0ms) wled.json Examples/Mover.wled
Heap open definition file > 0
Heap definitionJsonDoc 16384 > 0 (0ms)
programFile size 469 bytes
Heap parseTreeJsonDoc 32768 > 0 (0ms)
 PROGRAM PROGRAM -> [ID Mover] 0
 ID Mover -> [LCURL {] 0
  LCURL { -> [FUNCTION FUNCTION] 1
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID locn] 5
         ID locn -> [ASSIGN =] 8
         found varleft
         ASSIGN = -> [ID millis] 8
             ID millis -> [LPAREN (] 12
             LPAREN ( -> [RPAREN )] 12
             found actuals
             RPAREN ) -> [DIV /] 12
            found call
           found factor
             DIV / -> [INTEGER_CONST 100] 12
             INTEGER_CONST 100 -> [FOR FOR] 12
            found factor
          found term
         found expr
        found assign
       found statement
         FOR FOR -> [LPAREN (] 8
         LPAREN ( -> [ID i] 8
          ID i -> [ASSIGN =] 9
          found varleft
          ASSIGN = -> [INTEGER_CONST 0] 9
             INTEGER_CONST 0 -> [SEMI ;] 12
            found factor
           found term
          found expr
         found assign
         SEMI ; -> [ID i] 8
             ID i -> [LT <] 12
            ID i -> [LT <] 11
            found varref
           found factor
          found term
            LT < -> [ID ledCount] 11
              ID ledCount -> [SEMI ;] 13
             ID ledCount -> [SEMI ;] 12
             found varref
            found factor
           found term
         found expr
         SEMI ; -> [ID i] 8
           ID i -> [ASSIGN =] 10
           found varleft
           ASSIGN = -> [ID i] 10
               ID i -> [PLUS +] 14
              ID i -> [PLUS +] 13
              found varref
             found factor
            found term
              PLUS + -> [INTEGER_CONST 30] 13
               INTEGER_CONST 30 -> [RPAREN )] 14
              found factor
             found term
           found expr
          found assign
         found increment
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID leds] 9
             ID leds -> [LBRACKET [] 12
             found varleft
              LBRACKET [ -> [ID locn] 13
                   ID locn -> [PLUS +] 18
                  ID locn -> [PLUS +] 17
                  found varref
                 found factor
                found term
                  PLUS + -> [ID i] 17
                    ID i -> [RBRACKET ]] 19
                   ID i -> [RBRACKET ]] 18
                   found varref
                  found factor
                 found term
               found expr
              found indices
              RBRACKET ] -> [ASSIGN =] 13
             ASSIGN = -> [ID colorWheel] 12
                 ID colorWheel -> [LPAREN (] 16
                 LPAREN ( -> [INTEGER_CONST 50] 16
                     INTEGER_CONST 50 -> [RPAREN )] 20
                    found factor
                   found term
                  found expr
                 found actuals
                 RPAREN ) -> [ID leds] 16
                found call
               found factor
              found term
             found expr
            found assign
           found statement
             ID leds -> [LBRACKET [] 12
             found varleft
              LBRACKET [ -> [ID locn] 13
                   ID locn -> [PLUS +] 18
                  ID locn -> [PLUS +] 17
                  found varref
                 found factor
                found term
                  PLUS + -> [ID i] 17
                    ID i -> [PLUS +] 19
                   ID i -> [PLUS +] 18
                   found varref
                  found factor
                 found term
                  PLUS + -> [INTEGER_CONST 10] 17
                   INTEGER_CONST 10 -> [RBRACKET ]] 18
                  found factor
                 found term
               found expr
              found indices
              RBRACKET ] -> [ASSIGN =] 13
             ASSIGN = -> [ID colorWheel] 12
                 ID colorWheel -> [LPAREN (] 16
                 LPAREN ( -> [INTEGER_CONST 125] 16
                     INTEGER_CONST 125 -> [RPAREN )] 20
                    found factor
                   found term
                  found expr
                 found actuals
                 RPAREN ) -> [ID leds] 16
                found call
               found factor
              found term
             found expr
            found assign
           found statement
             ID leds -> [LBRACKET [] 12
             found varleft
              LBRACKET [ -> [ID locn] 13
                   ID locn -> [PLUS +] 18
                  ID locn -> [PLUS +] 17
                  found varref
                 found factor
                found term
                  PLUS + -> [ID i] 17
                    ID i -> [PLUS +] 19
                   ID i -> [PLUS +] 18
                   found varref
                  found factor
                 found term
                  PLUS + -> [INTEGER_CONST 20] 17
                   INTEGER_CONST 20 -> [RBRACKET ]] 18
                  found factor
                 found term
               found expr
              found indices
              RBRACKET ] -> [ASSIGN =] 13
             ASSIGN = -> [ID colorWheel] 12
                 ID colorWheel -> [LPAREN (] 16
                 LPAREN ( -> [INTEGER_CONST 200] 16
                     INTEGER_CONST 200 -> [RPAREN )] 20
                    found factor
                   found term
                  found expr
                 found actuals
                 RPAREN ) -> [RCURL }] 16
                found call
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [RCURL }] 9
         found block
        found for
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } 1
 found block
Symbol program Parsed until (17,1) 469 of 469
definitionJson usage 10355 of 16384 (63 %) (24 0 6)
parseTree usage      12851 of 32768 (39 %) (1 0 25)
garbageCollect       9171 of 32768 (28 %) (1 0 25)
Destruct Lexer
Heap parse > 0 (0ms)

Optimizer
Heap optimize > 0 (0ms)

Analyzer
 Program Mover 1 0
     Function Mover.renderFrame
         F_Assign renderFrame.locn of notype
         F_Assign locn = (8)
             Ext Function found millis (12)
          F_Assign renderFrame.i of notype
          F_Assign i = (9)
            VarRef found renderFrame.i (11)
              Ext Variable found ledCount (13) F_VarRef
           F_Assign i = (10)
              VarRef found renderFrame.i (13)
              Ext Variable found leds (13) F_Assign
              F_Assign leds = (13)
                 Ext Function found colorWheel (16)
                  VarRef found renderFrame.locn (17)
                    VarRef found renderFrame.i (19)
              Ext Variable found leds (13) F_Assign
              F_Assign leds = (13)
                 Ext Function found colorWheel (16)
                  VarRef found renderFrame.locn (17)
                    VarRef found renderFrame.i (19)
              Ext Variable found leds (13) F_Assign
              F_Assign leds = (13)
                 Ext Function found colorWheel (16)
                  VarRef found renderFrame.locn (17)
                    VarRef found renderFrame.i (19)
     0 F_Assign renderFrame.locn of 9 (2)
     1 F_Assign renderFrame.i of 9 (2)
 0 F_Function Mover.renderFrame of 9 (1)
Heap analyze > 0 (0ms)

interpret Mover 1 1
 program name ID
 Program Mover Mover
     Save block of renderFrame
Heap Interpret main > 0 (0ms)
         Call renderFrame (1)
                 Call millis() = 1000.000000
                  DIV / (Push 2)
                   INTEGER_CONST 100 (Push 3)
               1000.000000 / 100.000000 = 10.000000 (push 4)
             renderFrame.locn := 10.000000 (pop 0) 2-0
             For (0)
             from
                 INTEGER_CONST 0 (Push 1)
              renderFrame.i := 0.000000 (pop 0) 2-1
             iteration
             check to condition
                F_VarRef renderFrame.i = 0.000000 (push 1) 2-1
                 LT < (Push 2)
                  F_VarRef ext.ledCount = 3.000000 (push 3)
              0.000000 < 3.000000 = 1.000000 (push 4)
             conditionResult (pop 0)
             1 => run block
                     F_VarRef renderFrame.locn = 10.000000 (push 1) 2-0
                      PLUS + (Push 2)
                       F_VarRef renderFrame.i = 0.000000 (push 3) 2-1
                   10.000000 + 0.000000 = 10.000000 (push 4)
                       INTEGER_CONST 50 (Push 2)
                    Call colorWheel(50.000000) = 50.000000
arti_set_external_variable: leds(10.000000) := 50.000000
                 F_Assign set ext.leds[10] = 50.000000 (1)
                     F_VarRef renderFrame.locn = 10.000000 (push 1) 2-0
                      PLUS + (Push 2)
                       F_VarRef renderFrame.i = 0.000000 (push 3) 2-1
                      PLUS + (Push 4)
                       INTEGER_CONST 10 (Push 5)
                   10.000000 + 0.000000 = 10.000000 (push 6)
                   10.000000 + 10.000000 = 20.000000 (push 6)
                       INTEGER_CONST 125 (Push 2)
                    Call colorWheel(125.000000) = 125.000000
arti_set_external_variable: leds(20.000000) := 125.000000
                 F_Assign set ext.leds[20] = 125.000000 (1)
                     F_VarRef renderFrame.locn = 10.000000 (push 1) 2-0
                      PLUS + (Push 2)
                       F_VarRef renderFrame.i = 0.000000 (push 3) 2-1
                      PLUS + (Push 4)
                       INTEGER_CONST 20 (Push 5)
                   10.000000 + 0.000000 = 10.000000 (push 6)
                   10.000000 + 20.000000 = 30.000000 (push 6)
                       INTEGER_CONST 200 (Push 2)
                    Call colorWheel(200.000000) = 200.000000
arti_set_external_variable: leds(30.000000) := 200.000000
                 F_Assign set ext.leds[30] = 200.000000 (1)
             assign next value
                 F_VarRef renderFrame.i = 0.000000 (push 1) 2-1
                  PLUS + (Push 2)
                   INTEGER_CONST 30 (Push 3)
               0.000000 + 30.000000 = 30.000000 (push 4)
              renderFrame.i := 30.000000 (pop 0) 2-1
             iteration
             check to condition
                F_VarRef renderFrame.i = 30.000000 (push 1) 2-1
                 LT < (Push 2)
                  F_VarRef ext.ledCount = 3.000000 (push 3)
              30.000000 < 3.000000 = 0.000000 (push 4)
             conditionResult (pop 0)
             0 => end of For
Destruct activation record renderFrame
setPixels(-32768.000000)
         Call renderFrame (1)
                 Call millis() = 1000.000000
                  DIV / (Push 2)
                   INTEGER_CONST 100 (Push 3)
               1000.000000 / 100.000000 = 10.000000 (push 4)
             renderFrame.locn := 10.000000 (pop 0) 2-0
             For (0)
             from
                 INTEGER_CONST 0 (Push 1)
              renderFrame.i := 0.000000 (pop 0) 2-1
             iteration
             check to condition
                F_VarRef renderFrame.i = 0.000000 (push 1) 2-1
                 LT < (Push 2)
                  F_VarRef ext.ledCount = 3.000000 (push 3)
              0.000000 < 3.000000 = 1.000000 (push 4)
             conditionResult (pop 0)
             1 => run block
                     F_VarRef renderFrame.locn = 10.000000 (push 1) 2-0
                      PLUS + (Push 2)
                       F_VarRef renderFrame.i = 0.000000 (push 3) 2-1
                   10.000000 + 0.000000 = 10.000000 (push 4)
                       INTEGER_CONST 50 (Push 2)
                    Call colorWheel(50.000000) = 50.000000
arti_set_external_variable: leds(10.000000) := 50.000000
                 F_Assign set ext.leds[10] = 50.000000 (1)
                     F_VarRef renderFrame.locn = 10.000000 (push 1) 2-0
                      PLUS + (Push 2)
                       F_VarRef renderFrame.i = 0.000000 (push 3) 2-1
                      PLUS + (Push 4)
                       INTEGER_CONST 10 (Push 5)
                   10.000000 + 0.000000 = 10.000000 (push 6)
                   10.000000 + 10.000000 = 20.000000 (push 6)
                       INTEGER_CONST 125 (Push 2)
                    Call colorWheel(125.000000) = 125.000000
arti_set_external_variable: leds(20.000000) := 125.000000
                 F_Assign set ext.leds[20] = 125.000000 (1)
                     F_VarRef renderFrame.locn = 10.000000 (push 1) 2-0
                      PLUS + (Push 2)
                       F_VarRef renderFrame.i = 0.000000 (push 3) 2-1
                      PLUS + (Push 4)
                       INTEGER_CONST 20 (Push 5)
                   10.000000 + 0.000000 = 10.000000 (push 6)
                   10.000000 + 20.000000 = 30.000000 (push 6)
                       INTEGER_CONST 200 (Push 2)
                    Call colorWheel(200.000000) = 200.000000
arti_set_external_variable: leds(30.000000) := 200.000000
                 F_Assign set ext.leds[30] = 200.000000 (1)
             assign next value
                 F_VarRef renderFrame.i = 0.000000 (push 1) 2-1
                  PLUS + (Push 2)
                   INTEGER_CONST 30 (Push 3)
               0.000000 + 30.000000 = 30.000000 (push 4)
              renderFrame.i := 30.000000 (pop 0) 2-1
             iteration
             check to condition
                F_VarRef renderFrame.i = 30.000000 (push 1) 2-1
                 LT < (Push 2)
                  F_VarRef ext.ledCount = 3.000000 (push 3)
              30.000000 < 3.000000 = 0.000000 (push 4)
             conditionResult (pop 0)
             0 => end of For
Destruct activation record renderFrame
setPixels(-32768.000000)
Heap close Arti < 0
Destruct callstack
Destruct valueStack
Heap Destruct Symbol locn (0)
Heap Destruct Symbol i (0)
Heap Destruct ScopedSymbolTable renderFrame (0)
Heap Destruct Symbol renderFrame (0)
Heap Destruct ScopedSymbolTable Mover (0)
definitionJson usage  10355 of 16384 (63 %) (24 0 6)
parseTree usage       12019 of 32768 (37 %) (1 0 23)
