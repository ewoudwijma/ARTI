Heap Setup < 0 (0ms) wled.json Examples/Clock2D.wled
Heap open definition file > 0
Heap definitionJsonDoc 16384 > 0 (0ms)
programFile size 476 bytes
Heap parseTreeJsonDoc 65536 > 0 (0ms)
 PROGRAM PROGRAM -> [ID Clock2D] 0
 ID Clock2D -> [LCURL {] 0
  LCURL { -> [FUNCTION FUNCTION] 1
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID setRange] 5
         ID setRange -> [LPAREN (] 8
         found varref
         ID setRange -> [LPAREN (] 8
         LPAREN ( -> [INTEGER_CONST 0] 8
             INTEGER_CONST 0 -> [COMMA ,] 12
            found factor
           found term
          found expr
           COMMA , -> [ID ledCount] 10
               ID ledCount -> [COMMA ,] 14
              ID ledCount -> [COMMA ,] 13
              found varref
             found factor
            found term
           found expr
           COMMA , -> [INTEGER_CONST 0] 10
              INTEGER_CONST 0 -> [RPAREN )] 13
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [FOR FOR] 8
        found call
       found statement
         FOR FOR -> [LPAREN (] 8
         LPAREN ( -> [ID i] 8
          ID i -> [ASSIGN =] 9
          found varref
            ASSIGN = -> [INTEGER_CONST 0] 11
          found assignoperator
             INTEGER_CONST 0 -> [SEMI ;] 12
            found factor
           found term
          found expr
         found assign
         SEMI ; -> [ID i] 8
             ID i -> [LT <] 12
            ID i -> [LT <] 11
            found varref
           found factor
          found term
            LT < -> [INTEGER_CONST 360] 11
             INTEGER_CONST 360 -> [SEMI ;] 12
            found factor
           found term
         found expr
         SEMI ; -> [ID i] 8
           ID i -> [ASSIGN+ +=] 10
           found varref
             ASSIGN+ += -> [INTEGER_CONST 30] 12
           found assignoperator
              INTEGER_CONST 30 -> [RPAREN )] 13
             found factor
            found term
           found expr
          found assign
         found increment
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID setPixelColor] 9
             ID setPixelColor -> [LPAREN (] 12
             found varref
             ID setPixelColor -> [LPAREN (] 12
             LPAREN ( -> [ID circle2D] 12
                  ID circle2D -> [LPAREN (] 17
                  LPAREN ( -> [ID i] 17
                       ID i -> [RPAREN )] 22
                      ID i -> [RPAREN )] 21
                      found varref
                     found factor
                    found term
                   found expr
                  found actuals
                  RPAREN ) -> [COMMA ,] 17
                 found call
                found factor
               found term
              found expr
               COMMA , -> [INTEGER_CONST 225] 14
                  INTEGER_CONST 225 -> [RPAREN )] 17
                 found factor
                found term
               found expr
             found actuals
             RPAREN ) -> [RCURL }] 12
            found call
           found statement
          RCURL } -> [ID setPixelColor] 9
         found block
        found for
       found statement
         ID setPixelColor -> [LPAREN (] 8
         found varref
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID circle2D] 8
              ID circle2D -> [LPAREN (] 13
              LPAREN ( -> [ID second] 13
                   ID second -> [MUL *] 18
                  ID second -> [MUL *] 17
                  found varref
                 found factor
                   MUL * -> [INTEGER_CONST 6] 18
                   INTEGER_CONST 6 -> [RPAREN )] 18
                  found factor
                found term
               found expr
              found actuals
              RPAREN ) -> [COMMA ,] 13
             found call
            found factor
           found term
          found expr
           COMMA , -> [INTEGER_CONST 25] 10
              INTEGER_CONST 25 -> [RPAREN )] 13
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [ID setPixelColor] 8
        found call
       found statement
         ID setPixelColor -> [LPAREN (] 8
         found varref
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID circle2D] 8
              ID circle2D -> [LPAREN (] 13
              LPAREN ( -> [ID minute] 13
                   ID minute -> [MUL *] 18
                  ID minute -> [MUL *] 17
                  found varref
                 found factor
                   MUL * -> [INTEGER_CONST 6] 18
                   INTEGER_CONST 6 -> [RPAREN )] 18
                  found factor
                found term
               found expr
              found actuals
              RPAREN ) -> [COMMA ,] 13
             found call
            found factor
           found term
          found expr
           COMMA , -> [INTEGER_CONST 92] 10
              INTEGER_CONST 92 -> [RPAREN )] 13
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [ID setPixelColor] 8
        found call
       found statement
         ID setPixelColor -> [LPAREN (] 8
         found varref
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID circle2D] 8
              ID circle2D -> [LPAREN (] 13
              LPAREN ( -> [ID hour] 13
                   ID hour -> [MUL *] 18
                  ID hour -> [MUL *] 17
                  found varref
                 found factor
                   MUL * -> [INTEGER_CONST 30] 18
                   INTEGER_CONST 30 -> [PLUS +] 18
                  found factor
                found term
                  PLUS + -> [ID minute] 17
                    ID minute -> [DIV /] 19
                   ID minute -> [DIV /] 18
                   found varref
                  found factor
                    DIV / -> [INTEGER_CONST 2] 19
                    INTEGER_CONST 2 -> [RPAREN )] 19
                   found factor
                 found term
               found expr
              found actuals
              RPAREN ) -> [COMMA ,] 13
             found call
            found factor
           found term
          found expr
           COMMA , -> [INTEGER_CONST 160] 10
              INTEGER_CONST 160 -> [RPAREN )] 13
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [RCURL }] 8
        found call
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } 1
 found block
Symbol program Parsed until (22,1) 476 of 476
definitionJson usage 9415 of 16384 (57 %) (23 0 6)
parseTree usage      14736 of 65536 (22 %) (1 0 27)
garbageCollect       10512 of 65536 (16 %) (1 0 27)
Destruct Lexer
Heap parse > 0 (0ms)

Optimizer
              symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
                symbol to shrink factor in term = {"varref":{"ID":"ledCount"}} from {"factor":{"varref":{"ID":"ledCount"}}}
                symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
              symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
             symbol to shrink factor in term = {"varref":{"ID":"i"}} from {"factor":{"varref":{"ID":"i"}}}
               symbol to shrink factor in term = {"INTEGER_CONST":"360"} from {"factor":{"INTEGER_CONST":"360"}}
               symbol to shrink factor in term = {"INTEGER_CONST":"30"} from {"factor":{"INTEGER_CONST":"30"}}
                        symbol to shrink factor in term = {"varref":{"ID":"i"}} from {"factor":{"varref":{"ID":"i"}}}
                   symbol to shrink factor in term = {"call":{"ID":"circle2D","actuals":{"expr":{"term":{"varref":{"ID":"i"}}}}}} from {"factor":{"call":{"ID":"circle2D","actuals":{"expr":{"term":{"varref":{"ID":"i"}}}}}}}
                     symbol to shrink factor in term = {"INTEGER_CONST":"225"} from {"factor":{"INTEGER_CONST":"225"}}
              symbol to shrink factor in term = {"call":{"ID":"circle2D","actuals":{"expr":{"term":{"factor":{"varref":{"ID":"second"}},"*":[{"MUL":"*"},{"factor":{"INTEGER_CONST":"6"}}]}}}}} from {"factor":{"call":{"ID":"circle2D","actuals":{"expr":{"term":{"factor":{"varref":{"ID":"second"}},"*":[{"MUL":"*"},{"factor":{"INTEGER_CONST":"6"}}]}}}}}}
                symbol to shrink factor in term = {"INTEGER_CONST":"25"} from {"factor":{"INTEGER_CONST":"25"}}
              symbol to shrink factor in term = {"call":{"ID":"circle2D","actuals":{"expr":{"term":{"factor":{"varref":{"ID":"minute"}},"*":[{"MUL":"*"},{"factor":{"INTEGER_CONST":"6"}}]}}}}} from {"factor":{"call":{"ID":"circle2D","actuals":{"expr":{"term":{"factor":{"varref":{"ID":"minute"}},"*":[{"MUL":"*"},{"factor":{"INTEGER_CONST":"6"}}]}}}}}}
                symbol to shrink factor in term = {"INTEGER_CONST":"92"} from {"factor":{"INTEGER_CONST":"92"}}
              symbol to shrink factor in term = {"call":{"ID":"circle2D","actuals":{"expr":{"term":{"factor":{"varref":{"ID":"hour"}},"*":[{"MUL":"*"},{"factor":{"INTEGER_CONST":"30"}}]},"*":[{"PLUS":"+"},{"term":{"factor":{"varref":{"ID":"minute"}},"*":[{"DIV":"/"},{"factor":{"INTEGER_CONST":"2"}}]}}]}}}} from {"factor":{"call":{"ID":"circle2D","actuals":{"expr":{"term":{"factor":{"varref":{"ID":"hour"}},"*":[{"MUL":"*"},{"factor":{"INTEGER_CONST":"30"}}]},"*":[{"PLUS":"+"},{"term":{"factor":{"varref":{"ID":"minute"}},"*":[{"DIV":"/"},{"factor":{"INTEGER_CONST":"2"}}]}}]}}}}}
                symbol to shrink factor in term = {"INTEGER_CONST":"160"} from {"factor":{"INTEGER_CONST":"160"}}
Heap optimize > 0 (0ms)

Analyzer
 Program Clock2D 1 0
     Function Clock2D.renderFrame
         Ext Function found setRange (8)
              Ext Variable found ledCount (13) varref
          assign renderFrame.i of notype
          assign i = (9)
            VarRef found renderFrame.i (11)
           assign i = (10)
           asop +=
              Ext Function found setPixelColor (13)
                 Ext Function found circle2D (16)
                    VarRef found renderFrame.i (19)
         Ext Function found setPixelColor (8)
            Ext Function found circle2D (11)
                Ext Variable found second (15) varref
         Ext Function found setPixelColor (8)
            Ext Function found circle2D (11)
                Ext Variable found minute (15) varref
         Ext Function found setPixelColor (8)
            Ext Function found circle2D (11)
                Ext Variable found hour (15) varref
                  Ext Variable found minute (17) varref
     0 assign renderFrame.i of 9 (2)
 0 function Clock2D.renderFrame of 9 (1)
Heap analyze > 0 (0ms)

interpret Clock2D 1 1
 program Clock2D
     Save block of renderFrame
Heap Interpret main > 0 (0ms)
         Call renderFrame (1)
                INTEGER_CONST 0 (Push 1)
                  varref ext.ledCount = 3.000000 (push 2)
                  INTEGER_CONST 0 (Push 3)
             Call setRange(0.000000, 3.000000, 0.000000) = 3.000000
             For (1)
                 INTEGER_CONST 0 (Push 2)
              renderFrame.i := 0.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 0.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              0.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 0.000000 (push 2) 2-0
circle2D(0.000000)
                    Call circle2D(0.000000) = 0.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(0.000000, 225.000000)
                 Call setPixelColor(0.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 30.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 30.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              30.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 30.000000 (push 2) 2-0
circle2D(30.000000)
                    Call circle2D(30.000000) = 15.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(15.000000, 225.000000)
                 Call setPixelColor(15.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 60.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 60.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              60.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 60.000000 (push 2) 2-0
circle2D(60.000000)
                    Call circle2D(60.000000) = 30.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(30.000000, 225.000000)
                 Call setPixelColor(30.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 90.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 90.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              90.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 90.000000 (push 2) 2-0
circle2D(90.000000)
                    Call circle2D(90.000000) = 45.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(45.000000, 225.000000)
                 Call setPixelColor(45.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 120.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 120.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              120.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 120.000000 (push 2) 2-0
circle2D(120.000000)
                    Call circle2D(120.000000) = 60.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(60.000000, 225.000000)
                 Call setPixelColor(60.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 150.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 150.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              150.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 150.000000 (push 2) 2-0
circle2D(150.000000)
                    Call circle2D(150.000000) = 75.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(75.000000, 225.000000)
                 Call setPixelColor(75.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 180.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 180.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              180.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 180.000000 (push 2) 2-0
circle2D(180.000000)
                    Call circle2D(180.000000) = 90.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(90.000000, 225.000000)
                 Call setPixelColor(90.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 210.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 210.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              210.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 210.000000 (push 2) 2-0
circle2D(210.000000)
                    Call circle2D(210.000000) = 105.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(105.000000, 225.000000)
                 Call setPixelColor(105.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 240.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 240.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              240.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 240.000000 (push 2) 2-0
circle2D(240.000000)
                    Call circle2D(240.000000) = 120.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(120.000000, 225.000000)
                 Call setPixelColor(120.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 270.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 270.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              270.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 270.000000 (push 2) 2-0
circle2D(270.000000)
                    Call circle2D(270.000000) = 135.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(135.000000, 225.000000)
                 Call setPixelColor(135.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 300.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 300.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              300.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 300.000000 (push 2) 2-0
circle2D(300.000000)
                    Call circle2D(300.000000) = 150.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(150.000000, 225.000000)
                 Call setPixelColor(150.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 330.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 330.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              330.000000 < 360.000000 = 1.000000 (push 5)
             conditionResult (pop 1)
             1 => run block
                       varref renderFrame.i = 330.000000 (push 2) 2-0
circle2D(330.000000)
                    Call circle2D(330.000000) = 165.000000
                      INTEGER_CONST 225 (Push 3)
setPixelColor(165.000000, 225.000000)
                 Call setPixelColor(165.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 2)
              renderFrame.i += 360.000000 (pop 1) 2-0
             iteration
             check to condition
                varref renderFrame.i = 360.000000 (push 2) 2-0
                 LT < (Push 3)
                  INTEGER_CONST 360 (Push 4)
              360.000000 < 360.000000 = 0.000000 (push 5)
             conditionResult (pop 1)
             0 => end of For
                    varref ext.second = 30.000000 (push 2)
                     MUL * (Push 3)
                      INTEGER_CONST 6 (Push 4)
                  30.000000 * 6.000000 = 180.000000 (push 5)
circle2D(180.000000)
                Call circle2D(180.000000) = 90.000000
                  INTEGER_CONST 25 (Push 3)
setPixelColor(90.000000, 25.000000)
             Call setPixelColor(90.000000, 25.000000)
                    varref ext.minute = 29.000000 (push 2)
                     MUL * (Push 3)
                      INTEGER_CONST 6 (Push 4)
                  29.000000 * 6.000000 = 174.000000 (push 5)
circle2D(174.000000)
                Call circle2D(174.000000) = 87.000000
                  INTEGER_CONST 92 (Push 3)
setPixelColor(87.000000, 92.000000)
             Call setPixelColor(87.000000, 92.000000)
                    varref ext.hour = 28.000000 (push 2)
                     MUL * (Push 3)
                      INTEGER_CONST 30 (Push 4)
                  28.000000 * 30.000000 = 840.000000 (push 5)
                    PLUS + (Push 3)
                      varref ext.minute = 29.000000 (push 4)
                       DIV / (Push 5)
                        INTEGER_CONST 2 (Push 6)
                    29.000000 / 2.000000 = 14.500000 (push 7)
                 840.000000 + 14.500000 = 854.500000 (push 5)
circle2D(854.500000)
                Call circle2D(854.500000) = 427.250000
                  INTEGER_CONST 160 (Push 3)
setPixelColor(427.250000, 160.000000)
             Call setPixelColor(427.250000, 160.000000)
Destruct activation record renderFrame
         Call renderFrame (1)
                INTEGER_CONST 0 (Push 2)
                  varref ext.ledCount = 3.000000 (push 3)
                  INTEGER_CONST 0 (Push 4)
             Call setRange(0.000000, 3.000000, 0.000000) = 3.000000
             For (2)
                 INTEGER_CONST 0 (Push 3)
              renderFrame.i := 0.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 0.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              0.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 0.000000 (push 3) 2-0
circle2D(0.000000)
                    Call circle2D(0.000000) = 0.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(0.000000, 225.000000)
                 Call setPixelColor(0.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 30.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 30.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              30.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 30.000000 (push 3) 2-0
circle2D(30.000000)
                    Call circle2D(30.000000) = 15.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(15.000000, 225.000000)
                 Call setPixelColor(15.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 60.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 60.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              60.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 60.000000 (push 3) 2-0
circle2D(60.000000)
                    Call circle2D(60.000000) = 30.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(30.000000, 225.000000)
                 Call setPixelColor(30.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 90.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 90.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              90.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 90.000000 (push 3) 2-0
circle2D(90.000000)
                    Call circle2D(90.000000) = 45.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(45.000000, 225.000000)
                 Call setPixelColor(45.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 120.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 120.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              120.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 120.000000 (push 3) 2-0
circle2D(120.000000)
                    Call circle2D(120.000000) = 60.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(60.000000, 225.000000)
                 Call setPixelColor(60.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 150.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 150.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              150.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 150.000000 (push 3) 2-0
circle2D(150.000000)
                    Call circle2D(150.000000) = 75.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(75.000000, 225.000000)
                 Call setPixelColor(75.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 180.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 180.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              180.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 180.000000 (push 3) 2-0
circle2D(180.000000)
                    Call circle2D(180.000000) = 90.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(90.000000, 225.000000)
                 Call setPixelColor(90.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 210.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 210.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              210.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 210.000000 (push 3) 2-0
circle2D(210.000000)
                    Call circle2D(210.000000) = 105.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(105.000000, 225.000000)
                 Call setPixelColor(105.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 240.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 240.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              240.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 240.000000 (push 3) 2-0
circle2D(240.000000)
                    Call circle2D(240.000000) = 120.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(120.000000, 225.000000)
                 Call setPixelColor(120.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 270.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 270.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              270.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 270.000000 (push 3) 2-0
circle2D(270.000000)
                    Call circle2D(270.000000) = 135.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(135.000000, 225.000000)
                 Call setPixelColor(135.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 300.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 300.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              300.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 300.000000 (push 3) 2-0
circle2D(300.000000)
                    Call circle2D(300.000000) = 150.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(150.000000, 225.000000)
                 Call setPixelColor(150.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 330.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 330.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              330.000000 < 360.000000 = 1.000000 (push 6)
             conditionResult (pop 2)
             1 => run block
                       varref renderFrame.i = 330.000000 (push 3) 2-0
circle2D(330.000000)
                    Call circle2D(330.000000) = 165.000000
                      INTEGER_CONST 225 (Push 4)
setPixelColor(165.000000, 225.000000)
                 Call setPixelColor(165.000000, 225.000000)
             assign next value
                 INTEGER_CONST 30 (Push 3)
              renderFrame.i += 360.000000 (pop 2) 2-0
             iteration
             check to condition
                varref renderFrame.i = 360.000000 (push 3) 2-0
                 LT < (Push 4)
                  INTEGER_CONST 360 (Push 5)
              360.000000 < 360.000000 = 0.000000 (push 6)
             conditionResult (pop 2)
             0 => end of For
                    varref ext.second = 30.000000 (push 3)
                     MUL * (Push 4)
                      INTEGER_CONST 6 (Push 5)
                  30.000000 * 6.000000 = 180.000000 (push 6)
circle2D(180.000000)
                Call circle2D(180.000000) = 90.000000
                  INTEGER_CONST 25 (Push 4)
setPixelColor(90.000000, 25.000000)
             Call setPixelColor(90.000000, 25.000000)
                    varref ext.minute = 29.000000 (push 3)
                     MUL * (Push 4)
                      INTEGER_CONST 6 (Push 5)
                  29.000000 * 6.000000 = 174.000000 (push 6)
circle2D(174.000000)
                Call circle2D(174.000000) = 87.000000
                  INTEGER_CONST 92 (Push 4)
setPixelColor(87.000000, 92.000000)
             Call setPixelColor(87.000000, 92.000000)
                    varref ext.hour = 28.000000 (push 3)
                     MUL * (Push 4)
                      INTEGER_CONST 30 (Push 5)
                  28.000000 * 30.000000 = 840.000000 (push 6)
                    PLUS + (Push 4)
                      varref ext.minute = 29.000000 (push 5)
                       DIV / (Push 6)
                        INTEGER_CONST 2 (Push 7)
                    29.000000 / 2.000000 = 14.500000 (push 8)
                 840.000000 + 14.500000 = 854.500000 (push 6)
circle2D(854.500000)
                Call circle2D(854.500000) = 427.250000
                  INTEGER_CONST 160 (Push 4)
setPixelColor(427.250000, 160.000000)
             Call setPixelColor(427.250000, 160.000000)
Destruct activation record renderFrame
Heap close Arti < 0
Destruct callstack
Destruct valueStack
Heap Destruct Symbol i (0)
Heap Destruct ScopedSymbolTable renderFrame (0)
Heap Destruct Symbol renderFrame (0)
Heap Destruct ScopedSymbolTable Clock2D (0)
definitionJson usage  9415 of 16384 (57 %) (23 0 6)
parseTree usage       14320 of 65536 (22 %) (1 0 25)
