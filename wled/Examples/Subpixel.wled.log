setup 0 bytes free
open wled.json 0 ✓
definitionTree 16384 => 0 ✓
open Examples/Subpixel.wled 0 ✓
programFile size 954 bytes
parseTree 65536 => 0 ✓
 PROGRAM PROGRAM -> [ID Subpixel] 0
 ID Subpixel -> [LCURL {] 0
  LCURL { -> [FUNCTION FUNCTION] 1
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID t] 5
          ID t -> [ASSIGN =] 9
         found varref
           ASSIGN = -> [LPAREN (] 10
         found assignoperator
              LPAREN ( -> [ID sin] 13
                  ID sin -> [LPAREN (] 17
                  LPAREN ( -> [ID millis] 17
                       ID millis -> [LPAREN (] 22
                       LPAREN ( -> [RPAREN )] 22
                       found actuals
                       RPAREN ) -> [DIV /] 22
                      found call
                     found factor
                       DIV / -> [INTEGER_CONST 1000] 22
                       INTEGER_CONST 1000 -> [RPAREN )] 22
                      found factor
                    found term
                   found expr
                  found actuals
                  RPAREN ) -> [PLUS +] 17
                 found call
                found factor
               found term
                 PLUS + -> [INTEGER_CONST 1] 16
                  INTEGER_CONST 1 -> [RPAREN )] 17
                 found factor
                found term
              found expr
              RPAREN ) -> [DIV /] 13
            found factor
              DIV / -> [INTEGER_CONST 2] 13
              INTEGER_CONST 2 -> [ID t] 13
             found factor
           found term
          found expr
        found assign
       found statement
          ID t -> [ASSIGN* *=] 9
         found varref
           ASSIGN* *= -> [ID ledCount] 10
         found assignoperator
              ID ledCount -> [ID reverseSlider] 13
              ID ledCount -> [ID reverseSlider] 13
             found varref
            found factor
           found term
          found expr
        found assign
       found statement
          ID reverseSlider -> [ASSIGN =] 9
         found varref
           ASSIGN = -> [INTEGER_CONST 256] 10
         found assignoperator
             INTEGER_CONST 256 -> [MINUS -] 12
            found factor
           found term
             MINUS - -> [ID intensitySlider] 12
               ID intensitySlider -> [RCURL }] 14
               ID intensitySlider -> [RCURL }] 14
              found varref
             found factor
            found term
          found expr
        found assign
       found statement
      RCURL } -> [FUNCTION FUNCTION] 5
     found block
    found function
   found statement
     FUNCTION FUNCTION -> [ID renderLed] 4
     ID renderLed -> [LPAREN (] 4
      LPAREN ( -> [ID i] 5
       ID i -> [RPAREN )] 6
       found formal
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [ID diff] 5
          ID diff -> [ASSIGN =] 9
         found varref
           ASSIGN = -> [ID min] 10
         found assignoperator
              ID min -> [LPAREN (] 13
              LPAREN ( -> [ID abs] 13
                   ID abs -> [LPAREN (] 18
                   LPAREN ( -> [ID t] 18
                        ID t -> [MINUS -] 23
                        ID t -> [MINUS -] 23
                       found varref
                      found factor
                     found term
                       MINUS - -> [ID i] 22
                         ID i -> [RPAREN )] 24
                         ID i -> [RPAREN )] 24
                        found varref
                       found factor
                      found term
                    found expr
                   found actuals
                   RPAREN ) -> [COMMA ,] 18
                  found call
                 found factor
                found term
               found expr
                COMMA , -> [INTEGER_CONST 256] 15
                   INTEGER_CONST 256 -> [DIV /] 18
                  found factor
                    DIV / -> [ID reverseSlider] 19
                     ID reverseSlider -> [RPAREN )] 20
                     ID reverseSlider -> [RPAREN )] 20
                    found varref
                   found factor
                 found term
                found expr
              found actuals
              RPAREN ) -> [ID bri] 13
             found call
            found factor
           found term
          found expr
        found assign
       found statement
          ID bri -> [ASSIGN =] 9
         found varref
           ASSIGN = -> [INTEGER_CONST 256] 10
         found assignoperator
             INTEGER_CONST 256 -> [MINUS -] 12
            found factor
           found term
             MINUS - -> [ID diff] 12
               ID diff -> [MUL *] 14
               ID diff -> [MUL *] 14
              found varref
             found factor
               MUL * -> [ID reverseSlider] 14
                ID reverseSlider -> [ID leds] 15
                ID reverseSlider -> [ID leds] 15
               found varref
              found factor
            found term
          found expr
        found assign
       found statement
          ID leds -> [LBRACKET [] 9
           LBRACKET [ -> [ID i] 10
                ID i -> [RBRACKET ]] 15
                ID i -> [RBRACKET ]] 15
               found varref
              found factor
             found term
            found expr
           found indices
           RBRACKET ] -> [ASSIGN =] 10
         found varref
           ASSIGN = -> [ID hsv] 10
         found assignoperator
              ID hsv -> [LPAREN (] 13
              LPAREN ( -> [INTEGER_CONST 0] 13
                  INTEGER_CONST 0 -> [COMMA ,] 17
                 found factor
                found term
               found expr
                COMMA , -> [INTEGER_CONST 255] 15
                   INTEGER_CONST 255 -> [COMMA ,] 18
                  found factor
                 found term
                found expr
                COMMA , -> [ID bri] 15
                    ID bri -> [RPAREN )] 19
                    ID bri -> [RPAREN )] 19
                   found varref
                  found factor
                 found term
                found expr
              found actuals
              RPAREN ) -> [RCURL }] 13
             found call
            found factor
           found term
          found expr
        found assign
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } -> [ ] 1
 found block
Node program Parsed until (26,0) 954 of 954
parse 0 ✓
definitionTree 11885 / 72% (26 0 6)
parseTree      12441 / 18% (1 0 28)
garbageCollect 12441 / 18% -> 8633 / 13%
Destruct Lexer

Optimizer
                node to shrink factor in term : {"factor":{"call":{"ID":"sin","actuals":{"expr":{"term":{"factor":{"call":{"ID":"millis"}},"*":[{"DIV":"/"},{"factor":{"INTEGER_CONST":"1000"}}]}}}}}} from {"term":{"factor":{"call":{"ID":"sin","actuals":{"expr":{"term":{"factor":{"call":{"ID":"millis"}},"*":[{"DIV":"/"},{"factor":{"INTEGER_CONST":"1000"}}]}}}}}},"*":["multiple",{"PLUS":"+"},{"term":{"factor":{"INTEGER_CONST":"1"},"*":["multiple"]}}]}
                  node to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}}}
             node to shrink factor in term : {"factor":{"varref":{"ID":"ledCount"}}} from {"term":{"factor":{"varref":{"ID":"ledCount"}}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"INTEGER_CONST":"256"}} from {"term":{"factor":{"INTEGER_CONST":"256"}},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"varref":{"ID":"intensitySlider"}},"*":["multiple"]}}]}
               node to shrink factor in term : {"factor":{"varref":{"ID":"intensitySlider"}}} from {"term":{"factor":{"varref":{"ID":"intensitySlider"}}}}
                       node to shrink factor in term : {"factor":{"varref":{"ID":"t"}}} from {"term":{"factor":{"varref":{"ID":"t"}}},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"varref":{"ID":"i"}},"*":["multiple"]}}]}
                         node to shrink factor in term : {"factor":{"varref":{"ID":"i"}}} from {"term":{"factor":{"varref":{"ID":"i"}}}}
                  node to shrink factor in term : {"factor":{"call":{"ID":"abs","actuals":{"expr":{"term":{"varref":{"ID":"t"}},"*":[{"MINUS":"-"},{"term":{"varref":{"ID":"i"}}}]}}}}} from {"term":{"factor":{"call":{"ID":"abs","actuals":{"expr":{"term":{"varref":{"ID":"t"}},"*":[{"MINUS":"-"},{"term":{"varref":{"ID":"i"}}}]}}}}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"call":{"ID":"min","actuals":{"expr":{"term":{"call":{"ID":"abs","actuals":{"expr":{"term":{"varref":{"ID":"t"}},"*":[{"MINUS":"-"},{"term":{"varref":{"ID":"i"}}}]}}}}},"*":[{"expr":{"term":{"factor":{"INTEGER_CONST":"256"},"*":[{"DIV":"/"},{"factor":{"varref":{"ID":"reverseSlider"}}}]}}}]}}}} from {"term":{"factor":{"call":{"ID":"min","actuals":{"expr":{"term":{"call":{"ID":"abs","actuals":{"expr":{"term":{"varref":{"ID":"t"}},"*":[{"MINUS":"-"},{"term":{"varref":{"ID":"i"}}}]}}}}},"*":[{"expr":{"term":{"factor":{"INTEGER_CONST":"256"},"*":[{"DIV":"/"},{"factor":{"varref":{"ID":"reverseSlider"}}}]}}}]}}}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"INTEGER_CONST":"256"}} from {"term":{"factor":{"INTEGER_CONST":"256"}},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"varref":{"ID":"diff"}},"*":["multiple",{"MUL":"*"},{"factor":{"varref":{"ID":"reverseSlider"}}}]}}]}
               node to shrink factor in term : {"factor":{"varref":{"ID":"i"}}} from {"term":{"factor":{"varref":{"ID":"i"}}},"*":["multiple"]}
                  node to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}},"*":["multiple"]}
                    node to shrink factor in term : {"factor":{"INTEGER_CONST":"255"}} from {"term":{"factor":{"INTEGER_CONST":"255"}},"*":["multiple"]}
                    node to shrink factor in term : {"factor":{"varref":{"ID":"bri"}}} from {"term":{"factor":{"varref":{"ID":"bri"}}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"call":{"ID":"hsv","actuals":{"expr":{"term":{"INTEGER_CONST":"0"}},"*":[{"expr":{"term":{"INTEGER_CONST":"255"}}},{"expr":{"term":{"varref":{"ID":"bri"}}}}]}}}} from {"term":{"factor":{"call":{"ID":"hsv","actuals":{"expr":{"term":{"INTEGER_CONST":"0"}},"*":[{"expr":{"term":{"INTEGER_CONST":"255"}}},{"expr":{"term":{"varref":{"ID":"bri"}}}}]}}}},"*":["multiple"]}
optimize 0 ✓
garbageCollect 11609 / 17% -> 5657 / 8%

Analyzer
 Program Subpixel 1 0
     Function Subpixel.renderFrame
         assign Subpixel.t of notype
         assign t = (8)
               Ext Function found sin (14)
                   Ext Function found millis (18)
         assign t = (8)
         *=
            Ext Variable found ledCount (11) varref
         assign Subpixel.reverseSlider of notype
         assign reverseSlider = (8)
              Ext Variable found intensitySlider (13) varref
     Function Subpixel.renderLed
      formal renderLed.i of notype
         assign Subpixel.diff of notype
         assign diff = (8)
            Ext Function found min (11)
               Ext Function found abs (14)
                  VarRef found Subpixel.t (17)
                    VarRef found renderLed.i (19)
                    VarRef found Subpixel.reverseSlider (19)
         assign Subpixel.bri of notype
         assign bri = (8)
               VarRef found Subpixel.diff (14)
                 VarRef found Subpixel.reverseSlider (16)
             VarRef found renderLed.i (12)
         Ext Variable found leds (8) assign
         assign leds = (8)
            Ext Function found hsv (11)
                 VarRef found Subpixel.bri (16)
     0 formal renderLed.i of 9 (2)
 0 function Subpixel.renderFrame of 9 (1)
 1 assign Subpixel.t of 9 (1)
 2 assign Subpixel.reverseSlider of 9 (1)
 3 function Subpixel.renderLed of 9 (1)
 4 assign Subpixel.diff of 9 (1)
 5 assign Subpixel.bri of 9 (1)
analyze 0 ✓
garbageCollect 7257 / 11% -> 7214 / 11%

interpret Subpixel 1 6
 program Subpixel
     Save block of renderFrame
     Save block of renderLed
Interpret main 0 ✓
         Call renderFrame (1)
                       Call millis() = 1000.000000 (Pop 0, Push 1)
                        DIV / (Push 2)
                         INTEGER_CONST 1000 (Push 3)
                     1000.000000 / 1000.000000 = 1.000000 (pop 0, push 1)
                   Call sin(1.000000) = 0.841471 (Pop 0, Push 1)
                    PLUS + (Push 2)
                     INTEGER_CONST 1 (Push 3)
                 0.841471 + 1.000000 = 1.841471 (pop 0, push 1)
                  DIV / (Push 2)
                   INTEGER_CONST 2 (Push 3)
               1.841471 / 2.000000 = 0.920735 (pop 0, push 1)
             Subpixel.t := 0.920735 (pop 0) 1-1
                varref ext.ledCount = 3.000000 (push 1)
             Subpixel.t *= 2.762207 (pop 0) 1-1
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                  varref ext.intensitySlider = 19.000000 (push 3)
              256.000000 - 19.000000 = 237.000000 (pop 0, push 1)
             Subpixel.reverseSlider := 237.000000 (pop 0) 1-2
Destruct activation record renderFrame
                      varref Subpixel.t = 2.762207 (push 1) 1-1
                       MINUS - (Push 2)
                        varref renderLed.i = 0.000000 (push 3) 2-0
                    2.762207 - 0.000000 = 2.762207 (pop 0, push 1)
                   Call abs(2.762207) = 2.762207 (Pop 0, Push 1)
                      INTEGER_CONST 256 (Push 2)
                       DIV / (Push 3)
                        varref Subpixel.reverseSlider = 237.000000 (push 4) 1-2
                    256.000000 / 237.000000 = 1.080169 (pop 1, push 2)
                Call min(2.762207, 1.080169) = 1.080169 (Pop 0, Push 1)
             Subpixel.diff := 1.080169 (pop 0) 1-4
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                   varref Subpixel.diff = 1.080169 (push 3) 1-4
                    MUL * (Push 4)
                     varref Subpixel.reverseSlider = 237.000000 (push 5) 1-2
                 1.080169 * 237.000000 = 255.999985 (pop 2, push 3)
              256.000000 - 255.999985 = 0.000015 (pop 0, push 1)
             Subpixel.bri := 0.000015 (pop 0) 1-5
                   INTEGER_CONST 0 (Push 1)
                     INTEGER_CONST 255 (Push 2)
                     varref Subpixel.bri = 0.000015 (push 3) 1-5
hsv(0.000000, 255.000000, 0.000015)
                Call hsv(0.000000, 255.000000, 0.000015) = 255.000015 (Pop 0, Push 1)
                 varref renderLed.i = 0.000000 (push 1) 2-0
arti_set_external_variable: leds(0.000000) := 255.000015
             assign set ext.leds[0.000000] = 255.000015 (Pop 0)
                      varref Subpixel.t = 2.762207 (push 1) 1-1
                       MINUS - (Push 2)
                        varref renderLed.i = 1.000000 (push 3) 2-0
                    2.762207 - 1.000000 = 1.762207 (pop 0, push 1)
                   Call abs(1.762207) = 1.762207 (Pop 0, Push 1)
                      INTEGER_CONST 256 (Push 2)
                       DIV / (Push 3)
                        varref Subpixel.reverseSlider = 237.000000 (push 4) 1-2
                    256.000000 / 237.000000 = 1.080169 (pop 1, push 2)
                Call min(1.762207, 1.080169) = 1.080169 (Pop 0, Push 1)
             Subpixel.diff := 1.080169 (pop 0) 1-4
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                   varref Subpixel.diff = 1.080169 (push 3) 1-4
                    MUL * (Push 4)
                     varref Subpixel.reverseSlider = 237.000000 (push 5) 1-2
                 1.080169 * 237.000000 = 255.999985 (pop 2, push 3)
              256.000000 - 255.999985 = 0.000015 (pop 0, push 1)
             Subpixel.bri := 0.000015 (pop 0) 1-5
                   INTEGER_CONST 0 (Push 1)
                     INTEGER_CONST 255 (Push 2)
                     varref Subpixel.bri = 0.000015 (push 3) 1-5
hsv(0.000000, 255.000000, 0.000015)
                Call hsv(0.000000, 255.000000, 0.000015) = 255.000015 (Pop 0, Push 1)
                 varref renderLed.i = 1.000000 (push 1) 2-0
arti_set_external_variable: leds(1.000000) := 255.000015
             assign set ext.leds[1.000000] = 255.000015 (Pop 0)
                      varref Subpixel.t = 2.762207 (push 1) 1-1
                       MINUS - (Push 2)
                        varref renderLed.i = 2.000000 (push 3) 2-0
                    2.762207 - 2.000000 = 0.762207 (pop 0, push 1)
                   Call abs(0.762207) = 0.762207 (Pop 0, Push 1)
                      INTEGER_CONST 256 (Push 2)
                       DIV / (Push 3)
                        varref Subpixel.reverseSlider = 237.000000 (push 4) 1-2
                    256.000000 / 237.000000 = 1.080169 (pop 1, push 2)
                Call min(0.762207, 1.080169) = 0.762207 (Pop 0, Push 1)
             Subpixel.diff := 0.762207 (pop 0) 1-4
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                   varref Subpixel.diff = 0.762207 (push 3) 1-4
                    MUL * (Push 4)
                     varref Subpixel.reverseSlider = 237.000000 (push 5) 1-2
                 0.762207 * 237.000000 = 180.642960 (pop 2, push 3)
              256.000000 - 180.642960 = 75.357040 (pop 0, push 1)
             Subpixel.bri := 75.357040 (pop 0) 1-5
                   INTEGER_CONST 0 (Push 1)
                     INTEGER_CONST 255 (Push 2)
                     varref Subpixel.bri = 75.357040 (push 3) 1-5
hsv(0.000000, 255.000000, 75.357040)
                Call hsv(0.000000, 255.000000, 75.357040) = 330.357056 (Pop 0, Push 1)
                 varref renderLed.i = 2.000000 (push 1) 2-0
arti_set_external_variable: leds(2.000000) := 330.357056
             assign set ext.leds[2.000000] = 330.357056 (Pop 0)
Destruct activation record renderLed
setPixels(leds)
         Call renderFrame (1)
                       Call millis() = 1000.000000 (Pop 0, Push 1)
                        DIV / (Push 2)
                         INTEGER_CONST 1000 (Push 3)
                     1000.000000 / 1000.000000 = 1.000000 (pop 0, push 1)
                   Call sin(1.000000) = 0.841471 (Pop 0, Push 1)
                    PLUS + (Push 2)
                     INTEGER_CONST 1 (Push 3)
                 0.841471 + 1.000000 = 1.841471 (pop 0, push 1)
                  DIV / (Push 2)
                   INTEGER_CONST 2 (Push 3)
               1.841471 / 2.000000 = 0.920735 (pop 0, push 1)
             Subpixel.t := 0.920735 (pop 0) 1-1
                varref ext.ledCount = 3.000000 (push 1)
             Subpixel.t *= 2.762207 (pop 0) 1-1
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                  varref ext.intensitySlider = 19.000000 (push 3)
              256.000000 - 19.000000 = 237.000000 (pop 0, push 1)
             Subpixel.reverseSlider := 237.000000 (pop 0) 1-2
Destruct activation record renderFrame
                      varref Subpixel.t = 2.762207 (push 1) 1-1
                       MINUS - (Push 2)
                        varref renderLed.i = 0.000000 (push 3) 2-0
                    2.762207 - 0.000000 = 2.762207 (pop 0, push 1)
                   Call abs(2.762207) = 2.762207 (Pop 0, Push 1)
                      INTEGER_CONST 256 (Push 2)
                       DIV / (Push 3)
                        varref Subpixel.reverseSlider = 237.000000 (push 4) 1-2
                    256.000000 / 237.000000 = 1.080169 (pop 1, push 2)
                Call min(2.762207, 1.080169) = 1.080169 (Pop 0, Push 1)
             Subpixel.diff := 1.080169 (pop 0) 1-4
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                   varref Subpixel.diff = 1.080169 (push 3) 1-4
                    MUL * (Push 4)
                     varref Subpixel.reverseSlider = 237.000000 (push 5) 1-2
                 1.080169 * 237.000000 = 255.999985 (pop 2, push 3)
              256.000000 - 255.999985 = 0.000015 (pop 0, push 1)
             Subpixel.bri := 0.000015 (pop 0) 1-5
                   INTEGER_CONST 0 (Push 1)
                     INTEGER_CONST 255 (Push 2)
                     varref Subpixel.bri = 0.000015 (push 3) 1-5
hsv(0.000000, 255.000000, 0.000015)
                Call hsv(0.000000, 255.000000, 0.000015) = 255.000015 (Pop 0, Push 1)
                 varref renderLed.i = 0.000000 (push 1) 2-0
arti_set_external_variable: leds(0.000000) := 255.000015
             assign set ext.leds[0.000000] = 255.000015 (Pop 0)
                      varref Subpixel.t = 2.762207 (push 1) 1-1
                       MINUS - (Push 2)
                        varref renderLed.i = 1.000000 (push 3) 2-0
                    2.762207 - 1.000000 = 1.762207 (pop 0, push 1)
                   Call abs(1.762207) = 1.762207 (Pop 0, Push 1)
                      INTEGER_CONST 256 (Push 2)
                       DIV / (Push 3)
                        varref Subpixel.reverseSlider = 237.000000 (push 4) 1-2
                    256.000000 / 237.000000 = 1.080169 (pop 1, push 2)
                Call min(1.762207, 1.080169) = 1.080169 (Pop 0, Push 1)
             Subpixel.diff := 1.080169 (pop 0) 1-4
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                   varref Subpixel.diff = 1.080169 (push 3) 1-4
                    MUL * (Push 4)
                     varref Subpixel.reverseSlider = 237.000000 (push 5) 1-2
                 1.080169 * 237.000000 = 255.999985 (pop 2, push 3)
              256.000000 - 255.999985 = 0.000015 (pop 0, push 1)
             Subpixel.bri := 0.000015 (pop 0) 1-5
                   INTEGER_CONST 0 (Push 1)
                     INTEGER_CONST 255 (Push 2)
                     varref Subpixel.bri = 0.000015 (push 3) 1-5
hsv(0.000000, 255.000000, 0.000015)
                Call hsv(0.000000, 255.000000, 0.000015) = 255.000015 (Pop 0, Push 1)
                 varref renderLed.i = 1.000000 (push 1) 2-0
arti_set_external_variable: leds(1.000000) := 255.000015
             assign set ext.leds[1.000000] = 255.000015 (Pop 0)
                      varref Subpixel.t = 2.762207 (push 1) 1-1
                       MINUS - (Push 2)
                        varref renderLed.i = 2.000000 (push 3) 2-0
                    2.762207 - 2.000000 = 0.762207 (pop 0, push 1)
                   Call abs(0.762207) = 0.762207 (Pop 0, Push 1)
                      INTEGER_CONST 256 (Push 2)
                       DIV / (Push 3)
                        varref Subpixel.reverseSlider = 237.000000 (push 4) 1-2
                    256.000000 / 237.000000 = 1.080169 (pop 1, push 2)
                Call min(0.762207, 1.080169) = 0.762207 (Pop 0, Push 1)
             Subpixel.diff := 0.762207 (pop 0) 1-4
                INTEGER_CONST 256 (Push 1)
                 MINUS - (Push 2)
                   varref Subpixel.diff = 0.762207 (push 3) 1-4
                    MUL * (Push 4)
                     varref Subpixel.reverseSlider = 237.000000 (push 5) 1-2
                 0.762207 * 237.000000 = 180.642960 (pop 2, push 3)
              256.000000 - 180.642960 = 75.357040 (pop 0, push 1)
             Subpixel.bri := 75.357040 (pop 0) 1-5
                   INTEGER_CONST 0 (Push 1)
                     INTEGER_CONST 255 (Push 2)
                     varref Subpixel.bri = 75.357040 (push 3) 1-5
hsv(0.000000, 255.000000, 75.357040)
                Call hsv(0.000000, 255.000000, 75.357040) = 330.357056 (Pop 0, Push 1)
                 varref renderLed.i = 2.000000 (push 1) 2-0
arti_set_external_variable: leds(2.000000) := 330.357056
             assign set ext.leds[2.000000] = 330.357056 (Pop 0)
Destruct activation record renderLed
setPixels(leds)
closing Arti 0
Destruct callstack
Destruct valueStack
Destruct ScopedSymbolTable renderFrame (0)
Destruct Symbol i (0)
Destruct ScopedSymbolTable renderLed (0)
Destruct Symbol renderFrame (0)
Destruct Symbol t (0)
Destruct Symbol reverseSlider (0)
Destruct Symbol renderLed (0)
Destruct Symbol diff (0)
Destruct Symbol bri (0)
Destruct ScopedSymbolTable Subpixel (0)
definitionJson  11885 / 72% (26 0 6)
parseTree       7214 / 11% (1 0 25)
closed Arti 0 ✓
