 PROGRAM PROGRAM -> [ID Clock] 0
 ID Clock -> [LCURL {] 0
 block 0
  LCURL { -> [FUNCTION FUNCTION] 1
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      formals 5
       formal 6
       fail formal
      remove key/value FUNCTION FUNCTION (5)
      remove key/value LPAREN ( (5)
      remove empty values for key formals (5)
      success formals
      RPAREN ) -> [LCURL {] 5
     block 4
      LCURL { -> [ID setRange] 5
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setRange -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setRange -> [LPAREN (] 8
         LPAREN ( -> [INTEGER_CONST 0] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
             fail call
             varref 12
             fail varref
             INTEGER_CONST 0 -> [COMMA ,] 12
            success factor
           remove multiple key (10)
           remove multiple empty (10)
           success term
          remove multiple key (9)
          remove multiple empty (9)
          success expr
           COMMA , -> [ID ledCount] 10
           expr 10
            term 11
             factor 12
              call 13
               ID ledCount -> [COMMA ,] 14
              fail call
              varref 13
              ID ledCount -> [COMMA ,] 13
              success varref
             success factor
            remove multiple key (11)
            remove multiple empty (11)
            success term
           remove multiple key (10)
           remove multiple empty (10)
           success expr
           COMMA , -> [INTEGER_CONST 0] 10
           expr 10
            term 11
             factor 12
              call 13
              fail call
              varref 13
              fail varref
              INTEGER_CONST 0 -> [RPAREN )] 13
             success factor
            remove multiple key (11)
            remove multiple empty (11)
            success term
           remove multiple key (10)
           remove multiple empty (10)
           success expr
         remove key/value LPAREN ( (8)
         remove multiple key (8)
         success actuals
         RPAREN ) -> [ID setPixelColor] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setPixelColor -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID hour] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
              ID hour -> [COMMA ,] 13
             fail call
             varref 12
             ID hour -> [COMMA ,] 12
             success varref
            success factor
           remove multiple key (10)
           remove multiple empty (10)
           success term
          remove multiple key (9)
          remove multiple empty (9)
          success expr
           COMMA , -> [INTEGER_CONST 25] 10
           expr 10
            term 11
             factor 12
              call 13
              fail call
              varref 13
              fail varref
              INTEGER_CONST 25 -> [RPAREN )] 13
             success factor
            remove multiple key (11)
            remove multiple empty (11)
            success term
           remove multiple key (10)
           remove multiple empty (10)
           success expr
         remove key/value LPAREN ( (8)
         remove multiple key (8)
         success actuals
         RPAREN ) -> [ID setPixelColor] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setPixelColor -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID minute] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
              ID minute -> [COMMA ,] 13
             fail call
             varref 12
             ID minute -> [COMMA ,] 12
             success varref
            success factor
           remove multiple key (10)
           remove multiple empty (10)
           success term
          remove multiple key (9)
          remove multiple empty (9)
          success expr
           COMMA , -> [INTEGER_CONST 125] 10
           expr 10
            term 11
             factor 12
              call 13
              fail call
              varref 13
              fail varref
              INTEGER_CONST 125 -> [RPAREN )] 13
             success factor
            remove multiple key (11)
            remove multiple empty (11)
            success term
           remove multiple key (10)
           remove multiple empty (10)
           success expr
         remove key/value LPAREN ( (8)
         remove multiple key (8)
         success actuals
         RPAREN ) -> [ID setPixelColor] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setPixelColor -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID second] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
              ID second -> [COMMA ,] 13
             fail call
             varref 12
             ID second -> [COMMA ,] 12
             success varref
            success factor
           remove multiple key (10)
           remove multiple empty (10)
           success term
          remove multiple key (9)
          remove multiple empty (9)
          success expr
           COMMA , -> [INTEGER_CONST 225] 10
           expr 10
            term 11
             factor 12
              call 13
              fail call
              varref 13
              fail varref
              INTEGER_CONST 225 -> [RPAREN )] 13
             success factor
            remove multiple key (11)
            remove multiple empty (11)
            success term
           remove multiple key (10)
           remove multiple empty (10)
           success expr
         remove key/value LPAREN ( (8)
         remove multiple key (8)
         success actuals
         RPAREN ) -> [RCURL }] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         fail varleft
        fail assign
        function 7
        fail function
        call 7
        fail call
        for 7
        fail for
        if 7
        fail if
        block 7
        fail block
       fail statement
      RCURL } -> [RCURL }] 5
     remove key/value RPAREN ) (4)
     remove multiple key (4)
     success block
    success function
   success statement
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
    fail function
    call 3
    fail call
    for 3
    fail for
    if 3
    fail if
    block 3
    fail block
   fail statement
  RCURL } 1
 remove key/value PROGRAM PROGRAM (0)
 remove multiple key (0)
 success block
Symbol program Parsed until (15,1) 252 of 252
par mem 7230 of 25200 25200 1 0 19
prog size 252 factor 28
par mem 3300 of 25200 25200 1 0 19
Destruct Lexer

Analyzer
 Program Clock 1 0
     Function Clock.renderFrame
         Ext Function found setRange (8)
               Ext Variable found ledCount (14)
         Ext Function found setPixelColor (8)
             Ext Variable found hour (12)
         Ext Function found setPixelColor (8)
             Ext Variable found minute (12)
         Ext Function found setPixelColor (8)
             Ext Variable found second (12)
 0 Function Clock.renderFrame  1

interpret Clock 1 1
 program name ID
 Program Clock Clock
     Save block of renderFrame
         Call renderFrame (1)
                 INTEGER_CONST 0 (Push 1)
                   VarRef ext.ledCount = 3.000000 (push 2)
                   INTEGER_CONST 0 (Push 3)
             Call setRange(0.000000, 3.000000, 0.000000) = 3.000000
                 VarRef ext.hour = 24.000000 (push 2)
                   INTEGER_CONST 25 (Push 3)
setPixelColor(24.000000, 25.000000)
             Call setPixelColor(24.000000, 25.000000)
                 VarRef ext.minute = 60.000000 (push 2)
                   INTEGER_CONST 125 (Push 3)
setPixelColor(60.000000, 125.000000)
             Call setPixelColor(60.000000, 125.000000)
                 VarRef ext.second = 60.000000 (push 2)
                   INTEGER_CONST 225 (Push 3)
setPixelColor(60.000000, 225.000000)
             Call setPixelColor(60.000000, 225.000000)
Destruct activation record renderFrame
         Call renderFrame (1)
                 INTEGER_CONST 0 (Push 2)
                   VarRef ext.ledCount = 3.000000 (push 3)
                   INTEGER_CONST 0 (Push 4)
             Call setRange(0.000000, 3.000000, 0.000000) = 3.000000
                 VarRef ext.hour = 24.000000 (push 3)
                   INTEGER_CONST 25 (Push 4)
setPixelColor(24.000000, 25.000000)
             Call setPixelColor(24.000000, 25.000000)
                 VarRef ext.minute = 60.000000 (push 3)
                   INTEGER_CONST 125 (Push 4)
setPixelColor(60.000000, 125.000000)
             Call setPixelColor(60.000000, 125.000000)
                 VarRef ext.second = 60.000000 (push 3)
                   INTEGER_CONST 225 (Push 4)
setPixelColor(60.000000, 225.000000)
             Call setPixelColor(60.000000, 225.000000)
Destruct activation record renderFrame
Destruct callstack
Destruct valueStack
def mem 9435 of 12192 12192 24 0 6
par mem 3556 of 25200 25200 1 0 19
