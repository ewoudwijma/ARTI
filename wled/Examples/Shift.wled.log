Parser PROGRAM PROGRAM
 PROGRAM PROGRAM -> [ID Shift] 0
 ID Shift -> [LCURL {] 0
 block 0
  LCURL { -> [FUNCTION FUNCTION] 1
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      formals 5
       formal 6
       fail formal
      success formals
      RPAREN ) -> [LCURL {] 5
     block 4
      LCURL { -> [ID setPixelColor] 5
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setPixelColor -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [INTEGER_CONST 0] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
             fail call
             varref 12
             fail varref
             INTEGER_CONST 0 -> [COMMA ,] 12
            success factor
           remove multiple key
           remove multiple empty
           success term
          remove multiple key
          remove multiple empty
          success expr
           COMMA , -> [ID random] 10
           expr 10
            term 11
             factor 12
              call 13
               ID random -> [LPAREN (] 14
               LPAREN ( -> [RPAREN )] 14
               actuals 14
                expr 15
                 term 16
                  factor 17
                   call 18
                   fail call
                   varref 18
                   fail varref
                  fail factor
                 fail term
                fail expr
               success actuals
               RPAREN ) -> [RPAREN )] 14
              success call
             success factor
            remove multiple key
            remove multiple empty
            success term
           remove multiple key
           remove multiple empty
           success expr
         remove multiple key
         success actuals
         RPAREN ) -> [ID shift] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID shift -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID shift -> [LPAREN (] 8
         LPAREN ( -> [INTEGER_CONST 1] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
             fail call
             varref 12
             fail varref
             INTEGER_CONST 1 -> [RPAREN )] 12
            success factor
           remove multiple key
           remove multiple empty
           success term
          remove multiple key
          remove multiple empty
          success expr
         remove multiple key
         remove multiple empty
         success actuals
         RPAREN ) -> [RCURL }] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         fail varleft
        fail assign
        function 7
        fail function
        call 7
        fail call
        for 7
        fail for
        if 7
        fail if
        block 7
        fail block
       fail statement
      RCURL } -> [RCURL }] 5
     remove multiple key
     success block
    success function
   success statement
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
    fail function
    call 3
    fail call
    for 3
    fail for
    if 3
    fail if
    block 3
    fail block
   fail statement
  RCURL } 1
 remove multiple key
 success block
Symbol program Parsed until (9,1) 94 of 94
par mem 3709 of 9400 9400 1 0 20
prog size 94 factor 39
Destruct Lexer
Destruct Parser

Analyzer
 Program Shift 1 0
     Function Shift.renderFrame
         extfunc setPixelColor
               extfunc random
         extfunc shift
 0 Function Shift.renderFrame  1

interpret Shift 1 1
 program name ID
 Program Shift Shift
     Save block of renderFrame
         Call renderFrame (1)
                 INTEGER_CONST 0 (Push 1)
                   Call random() = 41.000000
setPixelColor(0.000000, 41.000000)
             Call setPixelColor(0.000000, 41.000000)
                 INTEGER_CONST 1 (Push 1)
shift(1.000000)
             Call shift(1.000000)
Destruct activation record renderFrame
         Call renderFrame (1)
                 INTEGER_CONST 0 (Push 1)
                   Call random() = 18467.000000
setPixelColor(0.000000, 18467.000000)
             Call setPixelColor(0.000000, 18467.000000)
                 INTEGER_CONST 1 (Push 1)
shift(1.000000)
             Call shift(1.000000)
Destruct activation record renderFrame
Destruct callstack
Destruct valueStack
Destruct Interpreter
def mem 9236 of 12192 12192 24 0 6
def mem 3709 of 9400 9400 1 0 20
