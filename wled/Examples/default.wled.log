Parser PROGRAM PROGRAM
 PROGRAM PROGRAM -> [ID ColorWalk] 0
 ID ColorWalk -> [LCURL {] 0
 block 0
  LCURL { -> [ID pixelCounter] 1
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     ID pixelCounter -> [ASSIGN =] 4
     success varleft
     ASSIGN = -> [INTEGER_CONST 0] 4
     expr 4
      term 5
       factor 6
        call 7
        fail call
        varref 7
        fail varref
        INTEGER_CONST 0 -> [FUNCTION FUNCTION] 7
       success factor
      remove multiple key
      remove multiple empty
      success term
     remove multiple key
     remove multiple empty
     success expr
    success assign
   success statement
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      formals 5
       formal 6
       fail formal
      success formals
      RPAREN ) -> [LCURL {] 5
     block 4
      LCURL { -> [ID setPixelColor] 5
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID setPixelColor -> [LPAREN (] 8
         success varleft
        fail assign
        function 7
        fail function
        call 7
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
         actuals 8
          expr 9
           term 10
            factor 11
             call 12
              ID pixelCounter -> [COMMA ,] 13
             fail call
             varref 12
             ID pixelCounter -> [COMMA ,] 12
             success varref
            success factor
           remove multiple key
           remove multiple empty
           success term
          remove multiple key
          remove multiple empty
          success expr
           COMMA , -> [ID pixelCounter] 10
           expr 10
            term 11
             factor 12
              call 13
               ID pixelCounter -> [RPAREN )] 14
              fail call
              varref 13
              ID pixelCounter -> [RPAREN )] 13
              success varref
             success factor
            remove multiple key
            remove multiple empty
            success term
           remove multiple key
           remove multiple empty
           success expr
         remove multiple key
         success actuals
         RPAREN ) -> [ID pixelCounter] 8
        success call
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         ID pixelCounter -> [ASSIGN =] 8
         success varleft
         ASSIGN = -> [ID pixelCounter] 8
         expr 8
          term 9
           factor 10
            call 11
             ID pixelCounter -> [PLUS +] 12
            fail call
            varref 11
            ID pixelCounter -> [PLUS +] 11
            success varref
           success factor
          remove multiple key
          remove multiple empty
          success term
            PLUS + -> [INTEGER_CONST 1] 11
           term 10
            factor 11
             call 12
             fail call
             varref 12
             fail varref
             INTEGER_CONST 1 -> [RCURL }] 12
            success factor
           remove multiple key
           remove multiple empty
           success term
         remove multiple key
         success expr
        success assign
       success statement
       statement 6
        variable 7
        fail variable
        assign 7
         varleft 8
         fail varleft
        fail assign
        function 7
        fail function
        call 7
        fail call
        for 7
        fail for
        if 7
        fail if
        block 7
        fail block
       fail statement
      RCURL } -> [RCURL }] 5
     remove multiple key
     success block
    success function
   success statement
   statement 2
    variable 3
    fail variable
    assign 3
     varleft 4
     fail varleft
    fail assign
    function 3
    fail function
    call 3
    fail call
    for 3
    fail for
    if 3
    fail if
    block 3
    fail block
   fail statement
  RCURL } 1
 remove multiple key
 success block
Symbol program Parsed until (10,1) 162 of 162
par mem 4369 of 16200 16200 1 0 19
prog size 162 factor 26
Destruct Lexer
Destruct Parser

Analyzer
 Program ColorWalk 1 0
     Assign ColorWalk.pixelCounter of notype
     Assign pixelCounter = (4)
     Function ColorWalk.renderFrame
         extfunc setPixelColor
             VarRef found pixelCounter (12)
               VarRef found pixelCounter (14)
         Assign pixelCounter = (8)
             VarRef found pixelCounter (12)
 0 Assign ColorWalk.pixelCounter notype 1
 1 Function ColorWalk.renderFrame  1

interpret ColorWalk 1 2
 program name ID
 Program ColorWalk ColorWalk
         INTEGER_CONST 0 (Push 1)
     ColorWalk.pixelCounter := 0.000000 (pop 0)
     Save block of renderFrame
         Call renderFrame (1)
                 VarRef ColorWalk.pixelCounter = 0.000000 (push 1)
                   VarRef ColorWalk.pixelCounter = 0.000000 (push 2)
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
                 VarRef ColorWalk.pixelCounter = 0.000000 (push 1)
                 PLUS + (Push 2)
                   INTEGER_CONST 1 (Push 3)
              0.000000 + 1.000000 = 1.000000 (push 1)
             ColorWalk.pixelCounter := 1.000000 (pop 0)
Destruct activation record renderFrame
         Call renderFrame (1)
                 VarRef ColorWalk.pixelCounter = 1.000000 (push 1)
                   VarRef ColorWalk.pixelCounter = 1.000000 (push 2)
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000)
                 VarRef ColorWalk.pixelCounter = 1.000000 (push 1)
                 PLUS + (Push 2)
                   INTEGER_CONST 1 (Push 3)
              1.000000 + 1.000000 = 2.000000 (push 1)
             ColorWalk.pixelCounter := 2.000000 (pop 0)
Destruct activation record renderFrame
Destruct callstack
Destruct valueStack
Destruct Interpreter
def mem 9236 of 12192 12192 24 0 6
def mem 4369 of 16200 16200 1 0 19
