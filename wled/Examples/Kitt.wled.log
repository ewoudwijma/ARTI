Heap Setup < 0 (0ms) wled.json Examples/Kitt.wled
Heap open definition file > 0
Heap definitionJsonDoc 16384 > 0 (0ms)
programFile size 512 bytes
Heap parseTreeJsonDoc 32768 > 0 (0ms)
 PROGRAM PROGRAM -> [ID Kitt] 0
 ID Kitt -> [LCURL {] 0
  LCURL { -> [ID pixelCounter] 1
     ID pixelCounter -> [ASSIGN =] 4
     found varleft
     ASSIGN = -> [INTEGER_CONST 0] 4
        INTEGER_CONST 0 -> [ID goingUp] 7
       found factor
      found term
     found expr
    found assign
   found statement
     ID goingUp -> [ASSIGN =] 4
     found varleft
     ASSIGN = -> [INTEGER_CONST 1] 4
        INTEGER_CONST 1 -> [FUNCTION FUNCTION] 7
       found factor
      found term
     found expr
    found assign
   found statement
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [IF IF] 5
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [GT >] 12
            ID pixelCounter -> [GT >] 11
            found varref
           found factor
          found term
            GT > -> [LPAREN (] 11
              LPAREN ( -> [ID ledCount] 13
                  ID ledCount -> [MINUS -] 17
                 ID ledCount -> [MINUS -] 16
                 found varref
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 5] 16
                  INTEGER_CONST 5 -> [RPAREN )] 17
                 found factor
                found term
              found expr
              RPAREN ) -> [RPAREN )] 13
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID goingUp] 9
             ID goingUp -> [ASSIGN =] 12
             found varleft
             ASSIGN = -> [INTEGER_CONST 0] 12
                INTEGER_CONST 0 -> [RCURL }] 15
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [IF IF] 9
         found block
        found if
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [EQ ==] 12
            ID pixelCounter -> [EQ ==] 11
            found varref
           found factor
          found term
            EQ == -> [INTEGER_CONST 0] 11
             INTEGER_CONST 0 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID goingUp] 9
             ID goingUp -> [ASSIGN =] 12
             found varleft
             ASSIGN = -> [INTEGER_CONST 1] 12
                INTEGER_CONST 1 -> [RCURL }] 15
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [ID setPixelColor] 9
         found block
        found if
       found statement
         ID setPixelColor -> [LPAREN (] 8
         found varleft
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
              ID pixelCounter -> [COMMA ,] 13
             ID pixelCounter -> [COMMA ,] 12
             found varref
            found factor
           found term
          found expr
           COMMA , -> [ID pixelCounter] 10
               ID pixelCounter -> [RPAREN )] 14
              ID pixelCounter -> [RPAREN )] 13
              found varref
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [IF IF] 8
        found call
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID goingUp] 8
             ID goingUp -> [RPAREN )] 12
            ID goingUp -> [RPAREN )] 11
            found varref
           found factor
          found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID setPixelColor] 9
             ID setPixelColor -> [LPAREN (] 12
             found varleft
             ID setPixelColor -> [LPAREN (] 12
             LPAREN ( -> [ID pixelCounter] 12
                  ID pixelCounter -> [MINUS -] 17
                 ID pixelCounter -> [MINUS -] 16
                 found varref
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 5] 16
                  INTEGER_CONST 5 -> [COMMA ,] 17
                 found factor
                found term
              found expr
               COMMA , -> [INTEGER_CONST 0] 14
                  INTEGER_CONST 0 -> [RPAREN )] 17
                 found factor
                found term
               found expr
             found actuals
             RPAREN ) -> [ID pixelCounter] 12
            found call
           found statement
             ID pixelCounter -> [ASSIGN =] 12
             found varleft
             ASSIGN = -> [ID pixelCounter] 12
                 ID pixelCounter -> [PLUS +] 16
                ID pixelCounter -> [PLUS +] 15
                found varref
               found factor
              found term
                PLUS + -> [INTEGER_CONST 1] 15
                 INTEGER_CONST 1 -> [RCURL }] 16
                found factor
               found term
             found expr
            found assign
           found statement
          RCURL } -> [ELSE ELSE] 9
         found block
          ELSE ELSE -> [LCURL {] 9
            LCURL { -> [ID setPixelColor] 11
               ID setPixelColor -> [LPAREN (] 14
               found varleft
               ID setPixelColor -> [LPAREN (] 14
               LPAREN ( -> [ID pixelCounter] 14
                    ID pixelCounter -> [PLUS +] 19
                   ID pixelCounter -> [PLUS +] 18
                   found varref
                  found factor
                 found term
                   PLUS + -> [INTEGER_CONST 5] 18
                    INTEGER_CONST 5 -> [COMMA ,] 19
                   found factor
                  found term
                found expr
                 COMMA , -> [INTEGER_CONST 0] 16
                    INTEGER_CONST 0 -> [RPAREN )] 19
                   found factor
                  found term
                 found expr
               found actuals
               RPAREN ) -> [ID pixelCounter] 14
              found call
             found statement
               ID pixelCounter -> [ASSIGN =] 14
               found varleft
               ASSIGN = -> [ID pixelCounter] 14
                   ID pixelCounter -> [MINUS -] 18
                  ID pixelCounter -> [MINUS -] 17
                  found varref
                 found factor
                found term
                  MINUS - -> [INTEGER_CONST 1] 17
                   INTEGER_CONST 1 -> [RCURL }] 18
                  found factor
                 found term
               found expr
              found assign
             found statement
            RCURL } -> [RCURL }] 11
           found block
          found elseBlock
        found if
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } 1
 found block
Symbol program Parsed until (29,1) 512 of 512
definitionJson usage 10355 of 16384 (63 %) (24 0 6)
parseTree usage      15674 of 32768 (48 %) (1 0 24)
garbageCollect       10874 of 32768 (33 %) (1 0 24)
Destruct Lexer
Heap parse > 0 (0ms)

Optimizer
Heap optimize > 0 (0ms)

Analyzer
 Program Kitt 1 0
     F_Assign Kitt.pixelCounter of notype
     F_Assign pixelCounter = (4)
     F_Assign Kitt.goingUp of notype
     F_Assign goingUp = (4)
     Function Kitt.renderFrame
            VarRef found Kitt.pixelCounter (11)
                Ext Variable found ledCount (15) F_VarRef
              F_Assign goingUp = (13)
            VarRef found Kitt.pixelCounter (11)
              F_Assign goingUp = (13)
         Ext Function found setPixelColor (8)
            VarRef found Kitt.pixelCounter (11)
              VarRef found Kitt.pixelCounter (13)
            VarRef found Kitt.goingUp (11)
              Ext Function found setPixelColor (13)
                 VarRef found Kitt.pixelCounter (16)
              F_Assign pixelCounter = (13)
                 VarRef found Kitt.pixelCounter (16)
               Ext Function found setPixelColor (14)
                  VarRef found Kitt.pixelCounter (17)
               F_Assign pixelCounter = (14)
                  VarRef found Kitt.pixelCounter (17)
 0 F_Assign Kitt.pixelCounter of 9 (1)
 1 F_Assign Kitt.goingUp of 9 (1)
 2 F_Function Kitt.renderFrame of 9 (1)
Heap analyze > 0 (0ms)

interpret Kitt 1 3
 program name ID
 Program Kitt Kitt
        INTEGER_CONST 0 (Push 1)
     Kitt.pixelCounter := 0.000000 (pop 0) 1-0
        INTEGER_CONST 1 (Push 1)
     Kitt.goingUp := 1.000000 (pop 0) 1-1
     Save block of renderFrame
Heap Interpret main > 0 (0ms)
         Call renderFrame (1)
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 GT > (Push 2)
                    F_VarRef ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              0.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              0.000000 == 0.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.goingUp := 1.000000 (pop 0) 1-1
                F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                  F_VarRef Kitt.pixelCounter = 0.000000 (push 2) 1-0
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
             If (0)
             if condition
                F_VarRef Kitt.goingUp = 1.000000 (push 1) 1-1
             (pop 0)
                     F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      MINUS - (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   0.000000 - 5.000000 = -5.000000 (push 4)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(-5.000000, 0.000000)
                  Call setPixelColor(-5.000000, 0.000000)
                     F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      PLUS + (Push 2)
                       INTEGER_CONST 1 (Push 3)
                   0.000000 + 1.000000 = 1.000000 (push 4)
                  Kitt.pixelCounter := 1.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 GT > (Push 2)
                    F_VarRef ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              1.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              1.000000 == 0.000000 = 0.000000 (push 4)
             (pop 0)
                F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                  F_VarRef Kitt.pixelCounter = 1.000000 (push 2) 1-0
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000)
             If (0)
             if condition
                F_VarRef Kitt.goingUp = 0.000000 (push 1) 1-1
             (pop 0)
                      F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                       PLUS + (Push 2)
                        INTEGER_CONST 5 (Push 3)
                    1.000000 + 5.000000 = 6.000000 (push 4)
                        INTEGER_CONST 0 (Push 2)
setPixelColor(6.000000, 0.000000)
                   Call setPixelColor(6.000000, 0.000000)
                      F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                       MINUS - (Push 2)
                        INTEGER_CONST 1 (Push 3)
                    1.000000 - 1.000000 = 0.000000 (push 4)
                   Kitt.pixelCounter := 0.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 GT > (Push 2)
                    F_VarRef ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              0.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              0.000000 == 0.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.goingUp := 1.000000 (pop 0) 1-1
                F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                  F_VarRef Kitt.pixelCounter = 0.000000 (push 2) 1-0
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
             If (0)
             if condition
                F_VarRef Kitt.goingUp = 1.000000 (push 1) 1-1
             (pop 0)
                     F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      MINUS - (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   0.000000 - 5.000000 = -5.000000 (push 4)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(-5.000000, 0.000000)
                  Call setPixelColor(-5.000000, 0.000000)
                     F_VarRef Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      PLUS + (Push 2)
                       INTEGER_CONST 1 (Push 3)
                   0.000000 + 1.000000 = 1.000000 (push 4)
                  Kitt.pixelCounter := 1.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 GT > (Push 2)
                    F_VarRef ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              1.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              1.000000 == 0.000000 = 0.000000 (push 4)
             (pop 0)
                F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                  F_VarRef Kitt.pixelCounter = 1.000000 (push 2) 1-0
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000)
             If (0)
             if condition
                F_VarRef Kitt.goingUp = 0.000000 (push 1) 1-1
             (pop 0)
                      F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                       PLUS + (Push 2)
                        INTEGER_CONST 5 (Push 3)
                    1.000000 + 5.000000 = 6.000000 (push 4)
                        INTEGER_CONST 0 (Push 2)
setPixelColor(6.000000, 0.000000)
                   Call setPixelColor(6.000000, 0.000000)
                      F_VarRef Kitt.pixelCounter = 1.000000 (push 1) 1-0
                       MINUS - (Push 2)
                        INTEGER_CONST 1 (Push 3)
                    1.000000 - 1.000000 = 0.000000 (push 4)
                   Kitt.pixelCounter := 0.000000 (pop 0) 1-0
Destruct activation record renderFrame
Heap close Arti < 0
Destruct callstack
Destruct valueStack
Heap Destruct ScopedSymbolTable renderFrame (0)
Heap Destruct Symbol pixelCounter (0)
Heap Destruct Symbol goingUp (0)
Heap Destruct Symbol renderFrame (0)
Heap Destruct ScopedSymbolTable Kitt (0)
definitionJson usage  10355 of 16384 (63 %) (24 0 6)
parseTree usage       13914 of 32768 (42 %) (1 0 23)
