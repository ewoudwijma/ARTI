setup 0 bytes free
open wled.json 0 ✓
definitionTree 16384 => 0 ✓
open Examples/Kitt.wled 0 ✓
programFile size 484 bytes
parseTree 65536 => 0 ✓
 PROGRAM PROGRAM -> [ID Kitt] 0
 ID Kitt -> [LCURL {] 0
  LCURL { -> [ID pixelCounter] 1
      ID pixelCounter -> [ASSIGN =] 5
     found varref
       ASSIGN = -> [INTEGER_CONST 0] 6
     found assignoperator
         INTEGER_CONST 0 -> [ID goingUp] 8
        found factor
       found term
      found expr
    found assign
   found statement
      ID goingUp -> [ASSIGN =] 5
     found varref
       ASSIGN = -> [INTEGER_CONST 1] 6
     found assignoperator
         INTEGER_CONST 1 -> [FUNCTION FUNCTION] 8
        found factor
       found term
      found expr
    found assign
   found statement
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [IF IF] 5
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [GT >] 12
             ID pixelCounter -> [GT >] 12
            found varref
           found factor
          found term
            GT > -> [LPAREN (] 11
              LPAREN ( -> [ID ledCount] 13
                  ID ledCount -> [MINUS -] 17
                  ID ledCount -> [MINUS -] 17
                 found varref
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 5] 16
                  INTEGER_CONST 5 -> [RPAREN )] 17
                 found factor
                found term
              found expr
              RPAREN ) -> [RPAREN )] 13
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID goingUp] 9
              ID goingUp -> [ASSIGN =] 13
             found varref
               ASSIGN = -> [INTEGER_CONST 0] 14
             found assignoperator
                 INTEGER_CONST 0 -> [RCURL }] 16
                found factor
               found term
              found expr
            found assign
           found statement
          RCURL } -> [IF IF] 9
         found block
        found if
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [EQ ==] 12
             ID pixelCounter -> [EQ ==] 12
            found varref
           found factor
          found term
            EQ == -> [INTEGER_CONST 0] 11
             INTEGER_CONST 0 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID goingUp] 9
              ID goingUp -> [ASSIGN =] 13
             found varref
               ASSIGN = -> [INTEGER_CONST 1] 14
             found assignoperator
                 INTEGER_CONST 1 -> [RCURL }] 16
                found factor
               found term
              found expr
            found assign
           found statement
          RCURL } -> [ID setPixelColor] 9
         found block
        found if
       found statement
          ID setPixelColor -> [LPAREN (] 9
         found varref
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
              ID pixelCounter -> [COMMA ,] 13
              ID pixelCounter -> [COMMA ,] 13
             found varref
            found factor
           found term
          found expr
           COMMA , -> [ID pixelCounter] 10
               ID pixelCounter -> [RPAREN )] 14
               ID pixelCounter -> [RPAREN )] 14
              found varref
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [IF IF] 8
        found call
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID goingUp] 8
             ID goingUp -> [RPAREN )] 12
             ID goingUp -> [RPAREN )] 12
            found varref
           found factor
          found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID setPixelColor] 9
              ID setPixelColor -> [LPAREN (] 13
             found varref
             ID setPixelColor -> [LPAREN (] 12
             LPAREN ( -> [ID pixelCounter] 12
                  ID pixelCounter -> [MINUS -] 17
                  ID pixelCounter -> [MINUS -] 17
                 found varref
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 5] 16
                  INTEGER_CONST 5 -> [COMMA ,] 17
                 found factor
                found term
              found expr
               COMMA , -> [INTEGER_CONST 0] 14
                  INTEGER_CONST 0 -> [RPAREN )] 17
                 found factor
                found term
               found expr
             found actuals
             RPAREN ) -> [ID pixelCounter] 12
            found call
           found statement
              ID pixelCounter -> [ASSIGN+ +=] 13
             found varref
               ASSIGN+ += -> [INTEGER_CONST 1] 14
             found assignoperator
                 INTEGER_CONST 1 -> [RCURL }] 16
                found factor
               found term
              found expr
            found assign
           found statement
          RCURL } -> [ELSE ELSE] 9
         found block
          ELSE ELSE -> [LCURL {] 9
            LCURL { -> [ID setPixelColor] 11
                ID setPixelColor -> [LPAREN (] 15
               found varref
               ID setPixelColor -> [LPAREN (] 14
               LPAREN ( -> [ID pixelCounter] 14
                    ID pixelCounter -> [PLUS +] 19
                    ID pixelCounter -> [PLUS +] 19
                   found varref
                  found factor
                 found term
                   PLUS + -> [INTEGER_CONST 5] 18
                    INTEGER_CONST 5 -> [COMMA ,] 19
                   found factor
                  found term
                found expr
                 COMMA , -> [INTEGER_CONST 0] 16
                    INTEGER_CONST 0 -> [RPAREN )] 19
                   found factor
                  found term
                 found expr
               found actuals
               RPAREN ) -> [ID pixelCounter] 14
              found call
             found statement
                ID pixelCounter -> [ASSIGN- -=] 15
               found varref
                 ASSIGN- -= -> [INTEGER_CONST 1] 16
               found assignoperator
                   INTEGER_CONST 1 -> [RCURL }] 18
                  found factor
                 found term
                found expr
              found assign
             found statement
            RCURL } -> [RCURL }] 11
           found block
          found elseBlock
        found if
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } -> [ ] 1
 found block
Node program Parsed until (29,1) 484 of 484
parse 0 ✓
definitionTree 11885 / 72% (26 0 6)
parseTree      13540 / 20% (1 0 24)
garbageCollect 13540 / 20% -> 8900 / 13%
Destruct Lexer

Optimizer
        node to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}},"*":["multiple"]}
        node to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple",{"GT":">"},{"term":{"factor":{"expr":{"term":{"factor":{"varref":{"ID":"ledCount"}},"*":["multiple"]},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"INTEGER_CONST":"5"},"*":["multiple"]}}]}},"*":["multiple"]}}]}
                  node to shrink factor in term : {"factor":{"varref":{"ID":"ledCount"}}} from {"term":{"factor":{"varref":{"ID":"ledCount"}}},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"INTEGER_CONST":"5"},"*":["multiple"]}}]}
                    node to shrink factor in term : {"factor":{"INTEGER_CONST":"5"}} from {"term":{"factor":{"INTEGER_CONST":"5"}}}
               node to shrink factor in term : {"factor":{"expr":{"term":{"varref":{"ID":"ledCount"}},"*":[{"MINUS":"-"},{"term":{"INTEGER_CONST":"5"}}]}}} from {"term":{"factor":{"expr":{"term":{"varref":{"ID":"ledCount"}},"*":[{"MINUS":"-"},{"term":{"INTEGER_CONST":"5"}}]}}}}
                  node to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple",{"EQ":"=="},{"term":{"factor":{"INTEGER_CONST":"0"},"*":["multiple"]}}]}
               node to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}}}
                  node to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}},"*":["multiple"]}
              node to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple"]}
                node to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple"]}
             node to shrink factor in term : {"factor":{"varref":{"ID":"goingUp"}}} from {"term":{"factor":{"varref":{"ID":"goingUp"}}},"*":["multiple"]}
                   node to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple",{"MINUS":"-"},{"term":{"factor":{"INTEGER_CONST":"5"},"*":["multiple"]}}]}
                     node to shrink factor in term : {"factor":{"INTEGER_CONST":"5"}} from {"term":{"factor":{"INTEGER_CONST":"5"}}}
                     node to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}},"*":["multiple"]}
                  node to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}},"*":["multiple"]}
                    node to shrink factor in term : {"factor":{"varref":{"ID":"pixelCounter"}}} from {"term":{"factor":{"varref":{"ID":"pixelCounter"}}},"*":["multiple",{"PLUS":"+"},{"term":{"factor":{"INTEGER_CONST":"5"},"*":["multiple"]}}]}
                      node to shrink factor in term : {"factor":{"INTEGER_CONST":"5"}} from {"term":{"factor":{"INTEGER_CONST":"5"}}}
                      node to shrink factor in term : {"factor":{"INTEGER_CONST":"0"}} from {"term":{"factor":{"INTEGER_CONST":"0"}},"*":["multiple"]}
                   node to shrink factor in term : {"factor":{"INTEGER_CONST":"1"}} from {"term":{"factor":{"INTEGER_CONST":"1"}},"*":["multiple"]}
            node to shrink block in elseBlock : {"block":{"*":[{"statement":{"call":{"ID":"setPixelColor","actuals":{"expr":{"term":{"varref":{"ID":"pixelCounter"}},"*":[{"PLUS":"+"},{"term":{"INTEGER_CONST":"5"}}]},"*":[{"expr":{"term":{"INTEGER_CONST":"0"}}}]}}}},{"statement":{"assign":{"varref":{"ID":"pixelCounter"},"assignoperator":{"ASSIGN-":"-="},"expr":{"term":{"INTEGER_CONST":"1"}}}}}]}} from {"expr":{"term":{"varref":{"ID":"goingUp"}}},"block":{"*":[{"statement":{"call":{"ID":"setPixelColor","actuals":{"expr":{"term":{"varref":{"ID":"pixelCounter"}},"*":[{"MINUS":"-"},{"term":{"INTEGER_CONST":"5"}}]},"*":[{"expr":{"term":{"INTEGER_CONST":"0"}}}]}}}},{"statement":{"assign":{"varref":{"ID":"pixelCounter"},"assignoperator":{"ASSIGN+":"+="},"expr":{"term":{"INTEGER_CONST":"1"}}}}}]},"elseBlock":{"block":{"*":[{"statement":{"call":{"ID":"setPixelColor","actuals":{"expr":{"term":{"varref":{"ID":"pixelCounter"}},"*":[{"PLUS":"+"},{"term":{"INTEGER_CONST":"5"}}]},"*":[{"expr":{"term":{"INTEGER_CONST":"0"}}}]}}}},{"statement":{"assign":{"varref":{"ID":"pixelCounter"},"assignoperator":{"ASSIGN-":"-="},"expr":{"term":{"INTEGER_CONST":"1"}}}}}]}}}
optimize 0 ✓
garbageCollect 11108 / 16% -> 5476 / 8%

Analyzer
 Program Kitt 1 0
     assign Kitt.pixelCounter of notype
     assign pixelCounter = (4)
     assign Kitt.goingUp of notype
     assign goingUp = (4)
     Function Kitt.renderFrame
            VarRef found Kitt.pixelCounter (11)
                Ext Variable found ledCount (15) varref
              assign goingUp = (13)
            VarRef found Kitt.pixelCounter (11)
              assign goingUp = (13)
         Ext Function found setPixelColor (8)
            VarRef found Kitt.pixelCounter (11)
              VarRef found Kitt.pixelCounter (13)
            VarRef found Kitt.goingUp (11)
              Ext Function found setPixelColor (13)
                 VarRef found Kitt.pixelCounter (16)
              assign pixelCounter = (13)
              +=
              Ext Function found setPixelColor (13)
                 VarRef found Kitt.pixelCounter (16)
              assign pixelCounter = (13)
              -=
 0 assign Kitt.pixelCounter of 9 (1)
 1 assign Kitt.goingUp of 9 (1)
 2 function Kitt.renderFrame of 9 (1)
analyze 0 ✓
garbageCollect 6980 / 10% -> 6894 / 10%

interpret Kitt 1 3
 program Kitt
        INTEGER_CONST 0 (Push 1)
     Kitt.pixelCounter := 0.000000 (pop 0) 1-0
        INTEGER_CONST 1 (Push 1)
     Kitt.goingUp := 1.000000 (pop 0) 1-1
     Save block of renderFrame
Interpret main 0 ✓
         Call renderFrame (1)
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (pop 2, push 3)
              0.000000 > -2.000000 = 1.000000 (pop 0, push 1)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              0.000000 == 0.000000 = 1.000000 (pop 0, push 1)
             (pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.goingUp := 1.000000 (pop 0) 1-1
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 0.000000 (push 2) 1-0
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000) (Pop 0)
             If (stack 0)
             condition
                varref Kitt.goingUp = 1.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      MINUS - (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   0.000000 - 5.000000 = -5.000000 (pop 0, push 1)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(-5.000000, 0.000000)
                  Call setPixelColor(-5.000000, 0.000000) (Pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter += 1.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (pop 2, push 3)
              1.000000 > -2.000000 = 1.000000 (pop 0, push 1)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              1.000000 == 0.000000 = 0.000000 (pop 0, push 1)
             (pop 0)
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 1.000000 (push 2) 1-0
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000) (Pop 0)
             If (stack 0)
             condition
                varref Kitt.goingUp = 0.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                      PLUS + (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   1.000000 + 5.000000 = 6.000000 (pop 0, push 1)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(6.000000, 0.000000)
                  Call setPixelColor(6.000000, 0.000000) (Pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter -= 0.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (pop 2, push 3)
              0.000000 > -2.000000 = 1.000000 (pop 0, push 1)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              0.000000 == 0.000000 = 1.000000 (pop 0, push 1)
             (pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.goingUp := 1.000000 (pop 0) 1-1
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 0.000000 (push 2) 1-0
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000) (Pop 0)
             If (stack 0)
             condition
                varref Kitt.goingUp = 1.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      MINUS - (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   0.000000 - 5.000000 = -5.000000 (pop 0, push 1)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(-5.000000, 0.000000)
                  Call setPixelColor(-5.000000, 0.000000) (Pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter += 1.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (pop 2, push 3)
              1.000000 > -2.000000 = 1.000000 (pop 0, push 1)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (stack 0)
             condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              1.000000 == 0.000000 = 0.000000 (pop 0, push 1)
             (pop 0)
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 1.000000 (push 2) 1-0
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000) (Pop 0)
             If (stack 0)
             condition
                varref Kitt.goingUp = 0.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                      PLUS + (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   1.000000 + 5.000000 = 6.000000 (pop 0, push 1)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(6.000000, 0.000000)
                  Call setPixelColor(6.000000, 0.000000) (Pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter -= 0.000000 (pop 0) 1-0
Destruct activation record renderFrame
closing Arti 0
Destruct callstack
Destruct valueStack
Destruct ScopedSymbolTable renderFrame (0)
Destruct Symbol pixelCounter (0)
Destruct Symbol goingUp (0)
Destruct Symbol renderFrame (0)
Destruct ScopedSymbolTable Kitt (0)
definitionJson  11885 / 72% (26 0 6)
parseTree       6894 / 10% (1 0 22)
closed Arti 0 ✓
