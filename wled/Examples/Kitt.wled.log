Heap Setup < 0 (0ms) wled.json Examples/Kitt.wled
Heap open definition file > 0
Heap definitionJsonDoc 16384 > 0 (0ms)
programFile size 484 bytes
Heap parseTreeJsonDoc 65536 > 0 (0ms)
 PROGRAM PROGRAM -> [ID Kitt] 0
 ID Kitt -> [LCURL {] 0
  LCURL { -> [ID pixelCounter] 1
     ID pixelCounter -> [ASSIGN =] 4
     found varref
       ASSIGN = -> [INTEGER_CONST 0] 6
     found assignoperator
        INTEGER_CONST 0 -> [ID goingUp] 7
       found factor
      found term
     found expr
    found assign
   found statement
     ID goingUp -> [ASSIGN =] 4
     found varref
       ASSIGN = -> [INTEGER_CONST 1] 6
     found assignoperator
        INTEGER_CONST 1 -> [FUNCTION FUNCTION] 7
       found factor
      found term
     found expr
    found assign
   found statement
     FUNCTION FUNCTION -> [ID renderFrame] 4
     ID renderFrame -> [LPAREN (] 4
      LPAREN ( -> [RPAREN )] 5
      found formals
      RPAREN ) -> [LCURL {] 5
      LCURL { -> [IF IF] 5
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [GT >] 12
            ID pixelCounter -> [GT >] 11
            found varref
           found factor
          found term
            GT > -> [LPAREN (] 11
              LPAREN ( -> [ID ledCount] 13
                  ID ledCount -> [MINUS -] 17
                 ID ledCount -> [MINUS -] 16
                 found varref
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 5] 16
                  INTEGER_CONST 5 -> [RPAREN )] 17
                 found factor
                found term
              found expr
              RPAREN ) -> [RPAREN )] 13
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID goingUp] 9
             ID goingUp -> [ASSIGN =] 12
             found varref
               ASSIGN = -> [INTEGER_CONST 0] 14
             found assignoperator
                INTEGER_CONST 0 -> [RCURL }] 15
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [IF IF] 9
         found block
        found if
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
             ID pixelCounter -> [EQ ==] 12
            ID pixelCounter -> [EQ ==] 11
            found varref
           found factor
          found term
            EQ == -> [INTEGER_CONST 0] 11
             INTEGER_CONST 0 -> [RPAREN )] 12
            found factor
           found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID goingUp] 9
             ID goingUp -> [ASSIGN =] 12
             found varref
               ASSIGN = -> [INTEGER_CONST 1] 14
             found assignoperator
                INTEGER_CONST 1 -> [RCURL }] 15
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [ID setPixelColor] 9
         found block
        found if
       found statement
         ID setPixelColor -> [LPAREN (] 8
         found varref
         ID setPixelColor -> [LPAREN (] 8
         LPAREN ( -> [ID pixelCounter] 8
              ID pixelCounter -> [COMMA ,] 13
             ID pixelCounter -> [COMMA ,] 12
             found varref
            found factor
           found term
          found expr
           COMMA , -> [ID pixelCounter] 10
               ID pixelCounter -> [RPAREN )] 14
              ID pixelCounter -> [RPAREN )] 13
              found varref
             found factor
            found term
           found expr
         found actuals
         RPAREN ) -> [IF IF] 8
        found call
       found statement
         IF IF -> [LPAREN (] 8
         LPAREN ( -> [ID goingUp] 8
             ID goingUp -> [RPAREN )] 12
            ID goingUp -> [RPAREN )] 11
            found varref
           found factor
          found term
         found expr
         RPAREN ) -> [LCURL {] 8
          LCURL { -> [ID setPixelColor] 9
             ID setPixelColor -> [LPAREN (] 12
             found varref
             ID setPixelColor -> [LPAREN (] 12
             LPAREN ( -> [ID pixelCounter] 12
                  ID pixelCounter -> [MINUS -] 17
                 ID pixelCounter -> [MINUS -] 16
                 found varref
                found factor
               found term
                 MINUS - -> [INTEGER_CONST 5] 16
                  INTEGER_CONST 5 -> [COMMA ,] 17
                 found factor
                found term
              found expr
               COMMA , -> [INTEGER_CONST 0] 14
                  INTEGER_CONST 0 -> [RPAREN )] 17
                 found factor
                found term
               found expr
             found actuals
             RPAREN ) -> [ID pixelCounter] 12
            found call
           found statement
             ID pixelCounter -> [ASSIGN+ +=] 12
             found varref
               ASSIGN+ += -> [INTEGER_CONST 1] 14
             found assignoperator
                INTEGER_CONST 1 -> [RCURL }] 15
               found factor
              found term
             found expr
            found assign
           found statement
          RCURL } -> [ELSE ELSE] 9
         found block
          ELSE ELSE -> [LCURL {] 9
            LCURL { -> [ID setPixelColor] 11
               ID setPixelColor -> [LPAREN (] 14
               found varref
               ID setPixelColor -> [LPAREN (] 14
               LPAREN ( -> [ID pixelCounter] 14
                    ID pixelCounter -> [PLUS +] 19
                   ID pixelCounter -> [PLUS +] 18
                   found varref
                  found factor
                 found term
                   PLUS + -> [INTEGER_CONST 5] 18
                    INTEGER_CONST 5 -> [COMMA ,] 19
                   found factor
                  found term
                found expr
                 COMMA , -> [INTEGER_CONST 0] 16
                    INTEGER_CONST 0 -> [RPAREN )] 19
                   found factor
                  found term
                 found expr
               found actuals
               RPAREN ) -> [ID pixelCounter] 14
              found call
             found statement
               ID pixelCounter -> [ASSIGN- -=] 14
               found varref
                 ASSIGN- -= -> [INTEGER_CONST 1] 16
               found assignoperator
                  INTEGER_CONST 1 -> [RCURL }] 17
                 found factor
                found term
               found expr
              found assign
             found statement
            RCURL } -> [RCURL }] 11
           found block
          found elseBlock
        found if
       found statement
      RCURL } -> [RCURL }] 5
     found block
    found function
   found statement
  RCURL } 1
 found block
Symbol program Parsed until (29,1) 484 of 484
definitionJson usage 9415 of 16384 (57 %) (23 0 6)
parseTree usage      15056 of 65536 (23 %) (1 0 24)
garbageCollect       10512 of 65536 (16 %) (1 0 24)
Destruct Lexer
Heap parse > 0 (0ms)

Optimizer
        symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
        symbol to shrink factor in term = {"INTEGER_CONST":"1"} from {"factor":{"INTEGER_CONST":"1"}}
             symbol to shrink factor in term = {"varref":{"ID":"pixelCounter"}} from {"factor":{"varref":{"ID":"pixelCounter"}}}
                  symbol to shrink factor in term = {"varref":{"ID":"ledCount"}} from {"factor":{"varref":{"ID":"ledCount"}}}
                    symbol to shrink factor in term = {"INTEGER_CONST":"5"} from {"factor":{"INTEGER_CONST":"5"}}
               symbol to shrink factor in term = {"expr":{"term":{"varref":{"ID":"ledCount"}},"*":[{"MINUS":"-"},{"term":{"INTEGER_CONST":"5"}}]}} from {"factor":{"expr":{"term":{"varref":{"ID":"ledCount"}},"*":[{"MINUS":"-"},{"term":{"INTEGER_CONST":"5"}}]}}}
                  symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
             symbol to shrink factor in term = {"varref":{"ID":"pixelCounter"}} from {"factor":{"varref":{"ID":"pixelCounter"}}}
               symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
                  symbol to shrink factor in term = {"INTEGER_CONST":"1"} from {"factor":{"INTEGER_CONST":"1"}}
              symbol to shrink factor in term = {"varref":{"ID":"pixelCounter"}} from {"factor":{"varref":{"ID":"pixelCounter"}}}
                symbol to shrink factor in term = {"varref":{"ID":"pixelCounter"}} from {"factor":{"varref":{"ID":"pixelCounter"}}}
             symbol to shrink factor in term = {"varref":{"ID":"goingUp"}} from {"factor":{"varref":{"ID":"goingUp"}}}
                   symbol to shrink factor in term = {"varref":{"ID":"pixelCounter"}} from {"factor":{"varref":{"ID":"pixelCounter"}}}
                     symbol to shrink factor in term = {"INTEGER_CONST":"5"} from {"factor":{"INTEGER_CONST":"5"}}
                     symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
                  symbol to shrink factor in term = {"INTEGER_CONST":"1"} from {"factor":{"INTEGER_CONST":"1"}}
                    symbol to shrink factor in term = {"varref":{"ID":"pixelCounter"}} from {"factor":{"varref":{"ID":"pixelCounter"}}}
                      symbol to shrink factor in term = {"INTEGER_CONST":"5"} from {"factor":{"INTEGER_CONST":"5"}}
                      symbol to shrink factor in term = {"INTEGER_CONST":"0"} from {"factor":{"INTEGER_CONST":"0"}}
                   symbol to shrink factor in term = {"INTEGER_CONST":"1"} from {"factor":{"INTEGER_CONST":"1"}}
            symbol to shrink block in elseBlock = {"*":[{"statement":{"call":{"ID":"setPixelColor","actuals":{"expr":{"term":{"varref":{"ID":"pixelCounter"}},"*":[{"PLUS":"+"},{"term":{"INTEGER_CONST":"5"}}]},"*":[{},{"expr":{"term":{"INTEGER_CONST":"0"}}}]}}}},{"statement":{"assign":{"varref":{"ID":"pixelCounter"},"assignoperator":{"ASSIGN-":"-="},"expr":{"term":{"INTEGER_CONST":"1"}}}}}]} from {"block":{"*":[{"statement":{"call":{"ID":"setPixelColor","actuals":{"expr":{"term":{"varref":{"ID":"pixelCounter"}},"*":[{"PLUS":"+"},{"term":{"INTEGER_CONST":"5"}}]},"*":[{},{"expr":{"term":{"INTEGER_CONST":"0"}}}]}}}},{"statement":{"assign":{"varref":{"ID":"pixelCounter"},"assignoperator":{"ASSIGN-":"-="},"expr":{"term":{"INTEGER_CONST":"1"}}}}}]}}
Heap optimize > 0 (0ms)

Analyzer
 Program Kitt 1 0
     assign Kitt.pixelCounter of notype
     assign pixelCounter = (4)
     assign Kitt.goingUp of notype
     assign goingUp = (4)
     Function Kitt.renderFrame
            VarRef found Kitt.pixelCounter (11)
                Ext Variable found ledCount (15) varref
              assign goingUp = (13)
            VarRef found Kitt.pixelCounter (11)
              assign goingUp = (13)
         Ext Function found setPixelColor (8)
            VarRef found Kitt.pixelCounter (11)
              VarRef found Kitt.pixelCounter (13)
            VarRef found Kitt.goingUp (11)
              Ext Function found setPixelColor (13)
                 VarRef found Kitt.pixelCounter (16)
              assign pixelCounter = (13)
              asop +=
              Ext Function found setPixelColor (13)
                 VarRef found Kitt.pixelCounter (16)
              assign pixelCounter = (13)
              asop -=
 0 assign Kitt.pixelCounter of 9 (1)
 1 assign Kitt.goingUp of 9 (1)
 2 function Kitt.renderFrame of 9 (1)
Heap analyze > 0 (0ms)

interpret Kitt 1 3
 program Kitt
        INTEGER_CONST 0 (Push 1)
     Kitt.pixelCounter := 0.000000 (pop 0) 1-0
        INTEGER_CONST 1 (Push 1)
     Kitt.goingUp := 1.000000 (pop 0) 1-1
     Save block of renderFrame
Heap Interpret main > 0 (0ms)
         Call renderFrame (1)
             If (0)
             if condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              0.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              0.000000 == 0.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.goingUp := 1.000000 (pop 0) 1-1
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 0.000000 (push 2) 1-0
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
             If (0)
             if condition
                varref Kitt.goingUp = 1.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      MINUS - (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   0.000000 - 5.000000 = -5.000000 (push 4)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(-5.000000, 0.000000)
                  Call setPixelColor(-5.000000, 0.000000)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter += 1.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (0)
             if condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              1.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              1.000000 == 0.000000 = 0.000000 (push 4)
             (pop 0)
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 1.000000 (push 2) 1-0
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000)
             If (0)
             if condition
                varref Kitt.goingUp = 0.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                      PLUS + (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   1.000000 + 5.000000 = 6.000000 (push 4)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(6.000000, 0.000000)
                  Call setPixelColor(6.000000, 0.000000)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter -= 0.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (0)
             if condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              0.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              0.000000 == 0.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.goingUp := 1.000000 (pop 0) 1-1
                varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 0.000000 (push 2) 1-0
setPixelColor(0.000000, 0.000000)
             Call setPixelColor(0.000000, 0.000000)
             If (0)
             if condition
                varref Kitt.goingUp = 1.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 0.000000 (push 1) 1-0
                      MINUS - (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   0.000000 - 5.000000 = -5.000000 (push 4)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(-5.000000, 0.000000)
                  Call setPixelColor(-5.000000, 0.000000)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter += 1.000000 (pop 0) 1-0
Destruct activation record renderFrame
         Call renderFrame (1)
             If (0)
             if condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 GT > (Push 2)
                    varref ext.ledCount = 3.000000 (push 3)
                     MINUS - (Push 4)
                      INTEGER_CONST 5 (Push 5)
                  3.000000 - 5.000000 = -2.000000 (push 6)
              1.000000 > -2.000000 = 1.000000 (push 4)
             (pop 0)
                     INTEGER_CONST 0 (Push 1)
                  Kitt.goingUp := 0.000000 (pop 0) 1-1
             If (0)
             if condition
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                 EQ == (Push 2)
                  INTEGER_CONST 0 (Push 3)
              1.000000 == 0.000000 = 0.000000 (push 4)
             (pop 0)
                varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                  varref Kitt.pixelCounter = 1.000000 (push 2) 1-0
setPixelColor(1.000000, 1.000000)
             Call setPixelColor(1.000000, 1.000000)
             If (0)
             if condition
                varref Kitt.goingUp = 0.000000 (push 1) 1-1
             (pop 0)
                     varref Kitt.pixelCounter = 1.000000 (push 1) 1-0
                      PLUS + (Push 2)
                       INTEGER_CONST 5 (Push 3)
                   1.000000 + 5.000000 = 6.000000 (push 4)
                       INTEGER_CONST 0 (Push 2)
setPixelColor(6.000000, 0.000000)
                  Call setPixelColor(6.000000, 0.000000)
                     INTEGER_CONST 1 (Push 1)
                  Kitt.pixelCounter -= 0.000000 (pop 0) 1-0
Destruct activation record renderFrame
Heap close Arti < 0
Destruct callstack
Destruct valueStack
Heap Destruct ScopedSymbolTable renderFrame (0)
Heap Destruct Symbol pixelCounter (0)
Heap Destruct Symbol goingUp (0)
Heap Destruct Symbol renderFrame (0)
Heap Destruct ScopedSymbolTable Kitt (0)
definitionJson usage  9415 of 16384 (57 %) (23 0 6)
parseTree usage       14256 of 65536 (22 %) (1 0 22)
